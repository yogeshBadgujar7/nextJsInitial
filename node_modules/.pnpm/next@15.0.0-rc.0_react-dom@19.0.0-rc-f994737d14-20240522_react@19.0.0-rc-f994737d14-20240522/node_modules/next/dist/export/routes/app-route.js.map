{"version":3,"sources":["../../../src/export/routes/app-route.ts"],"sourcesContent":["import type { ExportRouteResult, FileWriter } from '../types'\nimport type AppRouteRouteModule from '../../server/future/route-modules/app-route/module'\nimport type { AppRouteRouteHandlerContext } from '../../server/future/route-modules/app-route/module'\nimport type { IncrementalCache } from '../../server/lib/incremental-cache'\n\nimport { join } from 'path'\nimport {\n  NEXT_BODY_SUFFIX,\n  NEXT_CACHE_TAGS_HEADER,\n  NEXT_META_SUFFIX,\n} from '../../lib/constants'\nimport { NodeNextRequest } from '../../server/base-http/node'\nimport { RouteModuleLoader } from '../../server/future/helpers/module-loader/route-module-loader'\nimport {\n  NextRequestAdapter,\n  signalFromNodeResponse,\n} from '../../server/web/spec-extension/adapters/next-request'\nimport { toNodeOutgoingHttpHeaders } from '../../server/web/utils'\nimport type {\n  MockedRequest,\n  MockedResponse,\n} from '../../server/lib/mock-request'\nimport { isDynamicUsageError } from '../helpers/is-dynamic-usage-error'\nimport { SERVER_DIRECTORY } from '../../shared/lib/constants'\nimport { hasNextSupport } from '../../telemetry/ci-info'\nimport { isStaticGenEnabled } from '../../server/future/route-modules/app-route/helpers/is-static-gen-enabled'\nimport type { ExperimentalConfig } from '../../server/config-shared'\nimport {\n  isMetadataRouteFile,\n  isStaticMetadataRoute,\n} from '../../lib/metadata/is-metadata-route'\nimport { normalizeAppPath } from '../../shared/lib/router/utils/app-paths'\n\nexport const enum ExportedAppRouteFiles {\n  BODY = 'BODY',\n  META = 'META',\n}\n\nexport async function exportAppRoute(\n  req: MockedRequest,\n  res: MockedResponse,\n  params: { [key: string]: string | string[] } | undefined,\n  page: string,\n  incrementalCache: IncrementalCache | undefined,\n  distDir: string,\n  htmlFilepath: string,\n  fileWriter: FileWriter,\n  experimental: Required<Pick<ExperimentalConfig, 'after'>>\n): Promise<ExportRouteResult> {\n  // Ensure that the URL is absolute.\n  req.url = `http://localhost:3000${req.url}`\n\n  // Adapt the request and response to the Next.js request and response.\n  const request = NextRequestAdapter.fromNodeNextRequest(\n    new NodeNextRequest(req),\n    signalFromNodeResponse(res)\n  )\n\n  // Create the context for the handler. This contains the params from\n  // the route and the context for the request.\n  const context: AppRouteRouteHandlerContext = {\n    params,\n    prerenderManifest: {\n      version: 4,\n      routes: {},\n      dynamicRoutes: {},\n      preview: {\n        previewModeEncryptionKey: '',\n        previewModeId: '',\n        previewModeSigningKey: '',\n      },\n      notFoundRoutes: [],\n    },\n    renderOpts: {\n      experimental: experimental,\n      originalPathname: page,\n      nextExport: true,\n      supportsDynamicHTML: false,\n      incrementalCache,\n      waitUntil: undefined,\n      onClose: undefined,\n    },\n  }\n\n  if (hasNextSupport) {\n    context.renderOpts.isRevalidate = true\n  }\n\n  // This is a route handler, which means it has it's handler in the\n  // bundled file already, we should just use that.\n  const filename = join(distDir, SERVER_DIRECTORY, 'app', page)\n\n  try {\n    // Route module loading and handling.\n    const module = await RouteModuleLoader.load<AppRouteRouteModule>(filename)\n    const userland = module.userland\n    // we don't bail from the static optimization for\n    // metadata routes\n    const normalizedPage = normalizeAppPath(page)\n    const isMetadataRoute =\n      isStaticMetadataRoute(normalizedPage) ||\n      isMetadataRouteFile(`${normalizedPage}.ts`, ['ts'], true)\n\n    if (!isStaticGenEnabled(userland) && !isMetadataRoute) {\n      return { revalidate: 0 }\n    }\n\n    const response = await module.handle(request, context)\n\n    const isValidStatus = response.status < 400 || response.status === 404\n    if (!isValidStatus) {\n      return { revalidate: 0 }\n    }\n\n    const blob = await response.blob()\n    const revalidate =\n      typeof context.renderOpts.store?.revalidate === 'undefined'\n        ? false\n        : context.renderOpts.store.revalidate\n\n    const headers = toNodeOutgoingHttpHeaders(response.headers)\n    const cacheTags = (context.renderOpts as any).fetchTags\n\n    if (cacheTags) {\n      headers[NEXT_CACHE_TAGS_HEADER] = cacheTags\n    }\n\n    if (!headers['content-type'] && blob.type) {\n      headers['content-type'] = blob.type\n    }\n\n    // Writing response body to a file.\n    const body = Buffer.from(await blob.arrayBuffer())\n    await fileWriter(\n      ExportedAppRouteFiles.BODY,\n      htmlFilepath.replace(/\\.html$/, NEXT_BODY_SUFFIX),\n      body,\n      'utf8'\n    )\n\n    // Write the request metadata to a file.\n    const meta = { status: response.status, headers }\n    await fileWriter(\n      ExportedAppRouteFiles.META,\n      htmlFilepath.replace(/\\.html$/, NEXT_META_SUFFIX),\n      JSON.stringify(meta)\n    )\n\n    return {\n      revalidate: revalidate,\n      metadata: meta,\n    }\n  } catch (err) {\n    if (!isDynamicUsageError(err)) {\n      throw err\n    }\n\n    return { revalidate: 0 }\n  }\n}\n"],"names":["exportAppRoute","ExportedAppRouteFiles","req","res","params","page","incrementalCache","distDir","htmlFilepath","fileWriter","experimental","url","request","NextRequestAdapter","fromNodeNextRequest","NodeNextRequest","signalFromNodeResponse","context","prerenderManifest","version","routes","dynamicRoutes","preview","previewModeEncryptionKey","previewModeId","previewModeSigningKey","notFoundRoutes","renderOpts","originalPathname","nextExport","supportsDynamicHTML","waitUntil","undefined","onClose","hasNextSupport","isRevalidate","filename","join","SERVER_DIRECTORY","module","RouteModuleLoader","load","userland","normalizedPage","normalizeAppPath","isMetadataRoute","isStaticMetadataRoute","isMetadataRouteFile","isStaticGenEnabled","revalidate","response","handle","isValidStatus","status","blob","store","headers","toNodeOutgoingHttpHeaders","cacheTags","fetchTags","NEXT_CACHE_TAGS_HEADER","type","body","Buffer","from","arrayBuffer","replace","NEXT_BODY_SUFFIX","meta","NEXT_META_SUFFIX","JSON","stringify","metadata","err","isDynamicUsageError"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}