{"version":3,"sources":["../../src/export/index.ts"],"sourcesContent":["import type {\n  ExportAppResult,\n  ExportAppOptions,\n  ExportWorker,\n  WorkerRenderOptsPartial,\n} from './types'\nimport type { PrerenderManifest } from '../build'\nimport type { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\n\nimport { bold, yellow } from '../lib/picocolors'\nimport findUp from 'next/dist/compiled/find-up'\nimport { existsSync, promises as fs } from 'fs'\n\nimport '../server/require-hook'\n\nimport { Worker } from '../lib/worker'\nimport { dirname, join, resolve, sep } from 'path'\nimport { formatAmpMessages } from '../build/output/index'\nimport type { AmpPageStatus } from '../build/output/index'\nimport * as Log from '../build/output/log'\nimport { RSC_SUFFIX, SSG_FALLBACK_EXPORT_ERROR } from '../lib/constants'\nimport { recursiveCopy } from '../lib/recursive-copy'\nimport {\n  BUILD_ID_FILE,\n  CLIENT_PUBLIC_FILES_PATH,\n  CLIENT_STATIC_FILES_PATH,\n  EXPORT_DETAIL,\n  EXPORT_MARKER,\n  NEXT_FONT_MANIFEST,\n  MIDDLEWARE_MANIFEST,\n  PAGES_MANIFEST,\n  PHASE_EXPORT,\n  PRERENDER_MANIFEST,\n  SERVER_DIRECTORY,\n  SERVER_REFERENCE_MANIFEST,\n  APP_PATH_ROUTES_MANIFEST,\n} from '../shared/lib/constants'\nimport loadConfig from '../server/config'\nimport type { ExportPathMap, NextConfigComplete } from '../server/config-shared'\nimport { eventCliSession } from '../telemetry/events'\nimport { hasNextSupport } from '../telemetry/ci-info'\nimport { Telemetry } from '../telemetry/storage'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport { denormalizePagePath } from '../shared/lib/page-path/denormalize-page-path'\nimport { loadEnvConfig } from '@next/env'\nimport { isAPIRoute } from '../lib/is-api-route'\nimport { getPagePath } from '../server/require'\nimport type { Span } from '../trace'\nimport type { FontConfig } from '../server/font-utils'\nimport type { MiddlewareManifest } from '../build/webpack/plugins/middleware-plugin'\nimport { isAppRouteRoute } from '../lib/is-app-route-route'\nimport { isAppPageRoute } from '../lib/is-app-page-route'\nimport isError from '../lib/is-error'\nimport { needsExperimentalReact } from '../lib/needs-experimental-react'\nimport { formatManifest } from '../build/manifests/formatter/format-manifest'\nimport { validateRevalidate } from '../server/lib/patch-fetch'\nimport { TurborepoAccessTraceResult } from '../build/turborepo-access-trace'\nimport { createProgress } from '../build/progress'\nimport type { DeepReadonly } from '../shared/lib/deep-readonly'\nimport { checkIsAppPPREnabled } from '../server/lib/experimental/ppr'\n\nexport class ExportError extends Error {\n  code = 'NEXT_EXPORT_ERROR'\n}\n\ntype ExportWorkers = {\n  pages: ExportWorker\n  app?: ExportWorker\n  end: () => Promise<void>\n}\n\nfunction setupWorkers(\n  options: ExportAppOptions,\n  nextConfig: NextConfigComplete\n): ExportWorkers {\n  if (options.exportPageWorker) {\n    return {\n      pages: options.exportPageWorker,\n      app: options.exportAppPageWorker,\n      end: options.endWorker || (() => Promise.resolve()),\n    }\n  }\n\n  const threads = options.threads || nextConfig.experimental.cpus\n  if (!options.silent && !options.buildExport) {\n    Log.info(`Launching ${threads} workers`)\n  }\n\n  const timeout = nextConfig?.staticPageGenerationTimeout || 0\n\n  let infoPrinted = false\n\n  const worker = new Worker(require.resolve('./worker'), {\n    timeout: timeout * 1000,\n    onRestart: (_method, [{ path }], attempts) => {\n      if (attempts >= 3) {\n        throw new ExportError(\n          `Static page generation for ${path} is still timing out after 3 attempts. See more info here https://nextjs.org/docs/messages/static-page-generation-timeout`\n        )\n      }\n      Log.warn(\n        `Restarted static page generation for ${path} because it took more than ${timeout} seconds`\n      )\n      if (!infoPrinted) {\n        Log.warn(\n          'See more info here https://nextjs.org/docs/messages/static-page-generation-timeout'\n        )\n        infoPrinted = true\n      }\n    },\n    maxRetries: 0,\n    numWorkers: threads,\n    enableWorkerThreads: nextConfig.experimental.workerThreads,\n    exposedMethods: ['default'],\n  }) as Worker & typeof import('./worker')\n\n  return {\n    pages: worker.default,\n    end: async () => {\n      await worker.end()\n    },\n  }\n}\n\nexport async function exportAppImpl(\n  dir: string,\n  options: Readonly<ExportAppOptions>,\n  span: Span\n): Promise<ExportAppResult | null> {\n  dir = resolve(dir)\n\n  // attempt to load global env values so they are available in next.config.js\n  span.traceChild('load-dotenv').traceFn(() => loadEnvConfig(dir, false, Log))\n\n  const { enabledDirectories } = options\n\n  const nextConfig =\n    options.nextConfig ||\n    (await span\n      .traceChild('load-next-config')\n      .traceAsyncFn(() => loadConfig(PHASE_EXPORT, dir)))\n\n  const distDir = join(dir, nextConfig.distDir)\n  const telemetry = options.buildExport ? null : new Telemetry({ distDir })\n\n  if (telemetry) {\n    telemetry.record(\n      eventCliSession(distDir, nextConfig, {\n        webpackVersion: null,\n        cliCommand: 'export',\n        isSrcDir: null,\n        hasNowJson: !!(await findUp('now.json', { cwd: dir })),\n        isCustomServer: null,\n        turboFlag: false,\n        pagesDir: null,\n        appDir: null,\n      })\n    )\n  }\n\n  const subFolders = nextConfig.trailingSlash && !options.buildExport\n\n  if (!options.silent && !options.buildExport) {\n    Log.info(`using build directory: ${distDir}`)\n  }\n\n  const buildIdFile = join(distDir, BUILD_ID_FILE)\n\n  if (!existsSync(buildIdFile)) {\n    throw new ExportError(\n      `Could not find a production build in the '${distDir}' directory. Try building your app with 'next build' before starting the static export. https://nextjs.org/docs/messages/next-export-no-build-id`\n    )\n  }\n\n  const customRoutes = ['rewrites', 'redirects', 'headers'].filter(\n    (config) => typeof nextConfig[config] === 'function'\n  )\n\n  if (!hasNextSupport && !options.buildExport && customRoutes.length > 0) {\n    Log.warn(\n      `rewrites, redirects, and headers are not applied when exporting your application, detected (${customRoutes.join(\n        ', '\n      )}). See more info here: https://nextjs.org/docs/messages/export-no-custom-routes`\n    )\n  }\n\n  const buildId = await fs.readFile(buildIdFile, 'utf8')\n\n  const pagesManifest =\n    !options.pages &&\n    (require(join(distDir, SERVER_DIRECTORY, PAGES_MANIFEST)) as PagesManifest)\n\n  let prerenderManifest: DeepReadonly<PrerenderManifest> | undefined\n  try {\n    prerenderManifest = require(join(distDir, PRERENDER_MANIFEST))\n  } catch {}\n\n  let appRoutePathManifest: Record<string, string> | undefined\n  try {\n    appRoutePathManifest = require(join(distDir, APP_PATH_ROUTES_MANIFEST))\n  } catch (err) {\n    if (\n      isError(err) &&\n      (err.code === 'ENOENT' || err.code === 'MODULE_NOT_FOUND')\n    ) {\n      // the manifest doesn't exist which will happen when using\n      // \"pages\" dir instead of \"app\" dir.\n      appRoutePathManifest = undefined\n    } else {\n      // the manifest is malformed (invalid json)\n      throw err\n    }\n  }\n\n  const excludedPrerenderRoutes = new Set<string>()\n  const pages = options.pages || Object.keys(pagesManifest)\n  const defaultPathMap: ExportPathMap = {}\n\n  let hasApiRoutes = false\n  for (const page of pages) {\n    // _document and _app are not real pages\n    // _error is exported as 404.html later on\n    // API Routes are Node.js functions\n\n    if (isAPIRoute(page)) {\n      hasApiRoutes = true\n      continue\n    }\n\n    if (page === '/_document' || page === '/_app' || page === '/_error') {\n      continue\n    }\n\n    // iSSG pages that are dynamic should not export templated version by\n    // default. In most cases, this would never work. There is no server that\n    // could run `getStaticProps`. If users make their page work lazily, they\n    // can manually add it to the `exportPathMap`.\n    if (prerenderManifest?.dynamicRoutes[page]) {\n      excludedPrerenderRoutes.add(page)\n      continue\n    }\n\n    defaultPathMap[page] = { page }\n  }\n\n  const mapAppRouteToPage = new Map<string, string>()\n  if (!options.buildExport && appRoutePathManifest) {\n    for (const [pageName, routePath] of Object.entries(appRoutePathManifest)) {\n      mapAppRouteToPage.set(routePath, pageName)\n      if (\n        isAppPageRoute(pageName) &&\n        !prerenderManifest?.routes[routePath] &&\n        !prerenderManifest?.dynamicRoutes[routePath]\n      ) {\n        defaultPathMap[routePath] = {\n          page: pageName,\n          _isAppDir: true,\n        }\n      }\n    }\n  }\n\n  // Initialize the output directory\n  const outDir = options.outdir\n\n  if (outDir === join(dir, 'public')) {\n    throw new ExportError(\n      `The 'public' directory is reserved in Next.js and can not be used as the export out directory. https://nextjs.org/docs/messages/can-not-output-to-public`\n    )\n  }\n\n  if (outDir === join(dir, 'static')) {\n    throw new ExportError(\n      `The 'static' directory is reserved in Next.js and can not be used as the export out directory. https://nextjs.org/docs/messages/can-not-output-to-static`\n    )\n  }\n\n  await fs.rm(outDir, { recursive: true, force: true })\n  await fs.mkdir(join(outDir, '_next', buildId), { recursive: true })\n\n  await fs.writeFile(\n    join(distDir, EXPORT_DETAIL),\n    formatManifest({\n      version: 1,\n      outDirectory: outDir,\n      success: false,\n    }),\n    'utf8'\n  )\n\n  // Copy static directory\n  if (!options.buildExport && existsSync(join(dir, 'static'))) {\n    if (!options.silent) {\n      Log.info('Copying \"static\" directory')\n    }\n    await span\n      .traceChild('copy-static-directory')\n      .traceAsyncFn(() =>\n        recursiveCopy(join(dir, 'static'), join(outDir, 'static'))\n      )\n  }\n\n  // Copy .next/static directory\n  if (\n    !options.buildExport &&\n    existsSync(join(distDir, CLIENT_STATIC_FILES_PATH))\n  ) {\n    if (!options.silent) {\n      Log.info('Copying \"static build\" directory')\n    }\n    await span\n      .traceChild('copy-next-static-directory')\n      .traceAsyncFn(() =>\n        recursiveCopy(\n          join(distDir, CLIENT_STATIC_FILES_PATH),\n          join(outDir, '_next', CLIENT_STATIC_FILES_PATH)\n        )\n      )\n  }\n\n  // Get the exportPathMap from the config file\n  if (typeof nextConfig.exportPathMap !== 'function') {\n    nextConfig.exportPathMap = async (defaultMap) => {\n      return defaultMap\n    }\n  }\n\n  const {\n    i18n,\n    images: { loader = 'default', unoptimized },\n  } = nextConfig\n\n  if (i18n && !options.buildExport) {\n    throw new ExportError(\n      `i18n support is not compatible with next export. See here for more info on deploying: https://nextjs.org/docs/messages/export-no-custom-routes`\n    )\n  }\n\n  if (!options.buildExport) {\n    const { isNextImageImported } = await span\n      .traceChild('is-next-image-imported')\n      .traceAsyncFn(() =>\n        fs\n          .readFile(join(distDir, EXPORT_MARKER), 'utf8')\n          .then((text) => JSON.parse(text))\n          .catch(() => ({}))\n      )\n\n    if (\n      isNextImageImported &&\n      loader === 'default' &&\n      !unoptimized &&\n      !hasNextSupport\n    ) {\n      throw new ExportError(\n        `Image Optimization using the default loader is not compatible with export.\n  Possible solutions:\n    - Use \\`next start\\` to run a server, which includes the Image Optimization API.\n    - Configure \\`images.unoptimized = true\\` in \\`next.config.js\\` to disable the Image Optimization API.\n  Read more: https://nextjs.org/docs/messages/export-image-api`\n      )\n    }\n  }\n\n  let serverActionsManifest\n  if (enabledDirectories.app) {\n    serverActionsManifest = require(\n      join(distDir, SERVER_DIRECTORY, SERVER_REFERENCE_MANIFEST + '.json')\n    )\n    if (nextConfig.output === 'export') {\n      if (\n        Object.keys(serverActionsManifest.node).length > 0 ||\n        Object.keys(serverActionsManifest.edge).length > 0\n      ) {\n        throw new ExportError(\n          `Server Actions are not supported with static export.`\n        )\n      }\n    }\n  }\n\n  // Start the rendering process\n  const renderOpts: WorkerRenderOptsPartial = {\n    previewProps: prerenderManifest?.preview,\n    buildId,\n    nextExport: true,\n    assetPrefix: nextConfig.assetPrefix.replace(/\\/$/, ''),\n    distDir,\n    dev: false,\n    basePath: nextConfig.basePath,\n    trailingSlash: nextConfig.trailingSlash,\n    canonicalBase: nextConfig.amp?.canonicalBase || '',\n    ampSkipValidation: nextConfig.experimental.amp?.skipValidation || false,\n    ampOptimizerConfig: nextConfig.experimental.amp?.optimizer || undefined,\n    locales: i18n?.locales,\n    locale: i18n?.defaultLocale,\n    defaultLocale: i18n?.defaultLocale,\n    domainLocales: i18n?.domains,\n    disableOptimizedLoading: nextConfig.experimental.disableOptimizedLoading,\n    // Exported pages do not currently support dynamic HTML.\n    supportsDynamicHTML: false,\n    crossOrigin: nextConfig.crossOrigin,\n    optimizeCss: nextConfig.experimental.optimizeCss,\n    nextConfigOutput: nextConfig.output,\n    nextScriptWorkers: nextConfig.experimental.nextScriptWorkers,\n    optimizeFonts: nextConfig.optimizeFonts as FontConfig,\n    largePageDataBytes: nextConfig.experimental.largePageDataBytes,\n    serverActions: nextConfig.experimental.serverActions,\n    serverComponents: enabledDirectories.app,\n    nextFontManifest: require(\n      join(distDir, 'server', `${NEXT_FONT_MANIFEST}.json`)\n    ),\n    images: nextConfig.images,\n    ...(enabledDirectories.app\n      ? {\n          serverActionsManifest,\n        }\n      : {}),\n    strictNextHead: nextConfig.experimental.strictNextHead ?? true,\n    deploymentId: nextConfig.deploymentId,\n    experimental: {\n      isAppPPREnabled: checkIsAppPPREnabled(nextConfig.experimental.ppr),\n      clientTraceMetadata: nextConfig.experimental.clientTraceMetadata,\n      swrDelta: nextConfig.swrDelta,\n      after: nextConfig.experimental.after ?? false,\n    },\n  }\n\n  const { serverRuntimeConfig, publicRuntimeConfig } = nextConfig\n\n  if (Object.keys(publicRuntimeConfig).length > 0) {\n    renderOpts.runtimeConfig = publicRuntimeConfig\n  }\n\n  // We need this for server rendering the Link component.\n  ;(globalThis as any).__NEXT_DATA__ = {\n    nextExport: true,\n  }\n\n  const exportPathMap = await span\n    .traceChild('run-export-path-map')\n    .traceAsyncFn(async () => {\n      const exportMap = await nextConfig.exportPathMap(defaultPathMap, {\n        dev: false,\n        dir,\n        outDir,\n        distDir,\n        buildId,\n      })\n      return exportMap\n    })\n\n  // only add missing 404 page when `buildExport` is false\n  if (!options.buildExport) {\n    // only add missing /404 if not specified in `exportPathMap`\n    if (!exportPathMap['/404']) {\n      exportPathMap['/404'] = { page: '/_error' }\n    }\n\n    /**\n     * exports 404.html for backwards compat\n     * E.g. GitHub Pages, GitLab Pages, Cloudflare Pages, Netlify\n     */\n    if (!exportPathMap['/404.html']) {\n      // alias /404.html to /404 to be compatible with custom 404 / _error page\n      exportPathMap['/404.html'] = exportPathMap['/404']\n    }\n  }\n\n  // make sure to prevent duplicates\n  const exportPaths = [\n    ...new Set(\n      Object.keys(exportPathMap).map((path) =>\n        denormalizePagePath(normalizePagePath(path))\n      )\n    ),\n  ]\n\n  const filteredPaths = exportPaths.filter(\n    (route) =>\n      exportPathMap[route]._isAppDir ||\n      // Remove API routes\n      !isAPIRoute(exportPathMap[route].page)\n  )\n\n  if (filteredPaths.length !== exportPaths.length) {\n    hasApiRoutes = true\n  }\n\n  if (filteredPaths.length === 0) {\n    return null\n  }\n\n  if (prerenderManifest && !options.buildExport) {\n    const fallbackEnabledPages = new Set()\n\n    for (const path of Object.keys(exportPathMap)) {\n      const page = exportPathMap[path].page\n      const prerenderInfo = prerenderManifest.dynamicRoutes[page]\n\n      if (prerenderInfo && prerenderInfo.fallback !== false) {\n        fallbackEnabledPages.add(page)\n      }\n    }\n\n    if (fallbackEnabledPages.size > 0) {\n      throw new ExportError(\n        `Found pages with \\`fallback\\` enabled:\\n${[\n          ...fallbackEnabledPages,\n        ].join('\\n')}\\n${SSG_FALLBACK_EXPORT_ERROR}\\n`\n      )\n    }\n  }\n  let hasMiddleware = false\n\n  if (!options.buildExport) {\n    try {\n      const middlewareManifest = require(\n        join(distDir, SERVER_DIRECTORY, MIDDLEWARE_MANIFEST)\n      ) as MiddlewareManifest\n\n      hasMiddleware = Object.keys(middlewareManifest.middleware).length > 0\n    } catch {}\n\n    // Warn if the user defines a path for an API page\n    if (hasApiRoutes || hasMiddleware) {\n      if (nextConfig.output === 'export') {\n        Log.warn(\n          yellow(\n            `Statically exporting a Next.js application via \\`next export\\` disables API routes and middleware.`\n          ) +\n            `\\n` +\n            yellow(\n              `This command is meant for static-only hosts, and is` +\n                ' ' +\n                bold(`not necessary to make your application static.`)\n            ) +\n            `\\n` +\n            yellow(\n              `Pages in your application without server-side data dependencies will be automatically statically exported by \\`next build\\`, including pages powered by \\`getStaticProps\\`.`\n            ) +\n            `\\n` +\n            yellow(\n              `Learn more: https://nextjs.org/docs/messages/api-routes-static-export`\n            )\n        )\n      }\n    }\n  }\n\n  const progress =\n    !options.silent &&\n    createProgress(filteredPaths.length, options.statusMessage || 'Exporting')\n  const pagesDataDir = options.buildExport\n    ? outDir\n    : join(outDir, '_next/data', buildId)\n\n  const ampValidations: AmpPageStatus = {}\n\n  const publicDir = join(dir, CLIENT_PUBLIC_FILES_PATH)\n  // Copy public directory\n  if (!options.buildExport && existsSync(publicDir)) {\n    if (!options.silent) {\n      Log.info('Copying \"public\" directory')\n    }\n    await span.traceChild('copy-public-directory').traceAsyncFn(() =>\n      recursiveCopy(publicDir, outDir, {\n        filter(path) {\n          // Exclude paths used by pages\n          return !exportPathMap[path]\n        },\n      })\n    )\n  }\n\n  const workers = setupWorkers(options, nextConfig)\n\n  const results = await Promise.all(\n    filteredPaths.map(async (path) => {\n      const pathMap = exportPathMap[path]\n      const exportPage = workers[pathMap._isAppDir ? 'app' : 'pages']\n      if (!exportPage) {\n        throw new Error(\n          'Invariant: Undefined export worker for app dir, this is a bug in Next.js.'\n        )\n      }\n\n      const pageExportSpan = span.traceChild('export-page')\n      pageExportSpan.setAttribute('path', path)\n\n      const result = await pageExportSpan.traceAsyncFn(async () => {\n        return await exportPage({\n          dir,\n          path,\n          pathMap,\n          distDir,\n          outDir,\n          pagesDataDir,\n          renderOpts,\n          ampValidatorPath: nextConfig.experimental.amp?.validator || undefined,\n          trailingSlash: nextConfig.trailingSlash,\n          serverRuntimeConfig,\n          subFolders,\n          buildExport: options.buildExport,\n          optimizeFonts: nextConfig.optimizeFonts as FontConfig,\n          optimizeCss: nextConfig.experimental.optimizeCss,\n          disableOptimizedLoading:\n            nextConfig.experimental.disableOptimizedLoading,\n          parentSpanId: pageExportSpan.getId(),\n          httpAgentOptions: nextConfig.httpAgentOptions,\n          debugOutput: options.debugOutput,\n          cacheMaxMemorySize: nextConfig.cacheMaxMemorySize,\n          fetchCache: true,\n          fetchCacheKeyPrefix: nextConfig.experimental.fetchCacheKeyPrefix,\n          cacheHandler: nextConfig.cacheHandler,\n          enableExperimentalReact: needsExperimentalReact(nextConfig),\n          enabledDirectories,\n        })\n      })\n\n      if (nextConfig.experimental.prerenderEarlyExit) {\n        if (result && 'error' in result) {\n          throw new Error(\n            `Export encountered an error on ${path}, exiting due to prerenderEarlyExit: true being set`\n          )\n        }\n      }\n\n      if (progress) progress()\n\n      return { result, path }\n    })\n  )\n\n  const errorPaths: string[] = []\n  let renderError = false\n  let hadValidationError = false\n\n  const collector: ExportAppResult = {\n    byPath: new Map(),\n    byPage: new Map(),\n    ssgNotFoundPaths: new Set(),\n    turborepoAccessTraceResults: new Map(),\n  }\n\n  for (const { result, path } of results) {\n    if (!result) continue\n\n    const { page } = exportPathMap[path]\n\n    if (result.turborepoAccessTraceResult) {\n      collector.turborepoAccessTraceResults?.set(\n        path,\n        TurborepoAccessTraceResult.fromSerialized(\n          result.turborepoAccessTraceResult\n        )\n      )\n    }\n\n    // Capture any render errors.\n    if ('error' in result) {\n      renderError = true\n      errorPaths.push(page !== path ? `${page}: ${path}` : path)\n      continue\n    }\n\n    // Capture any amp validations.\n    if (result.ampValidations) {\n      for (const validation of result.ampValidations) {\n        ampValidations[validation.page] = validation.result\n        hadValidationError ||= validation.result.errors.length > 0\n      }\n    }\n\n    if (options.buildExport) {\n      // Update path info by path.\n      const info = collector.byPath.get(path) ?? {}\n      if (typeof result.revalidate !== 'undefined') {\n        info.revalidate = validateRevalidate(result.revalidate, path)\n      }\n      if (typeof result.metadata !== 'undefined') {\n        info.metadata = result.metadata\n      }\n\n      if (typeof result.hasEmptyPrelude !== 'undefined') {\n        info.hasEmptyPrelude = result.hasEmptyPrelude\n      }\n\n      if (typeof result.hasPostponed !== 'undefined') {\n        info.hasPostponed = result.hasPostponed\n      }\n\n      collector.byPath.set(path, info)\n\n      // Update not found.\n      if (result.ssgNotFound === true) {\n        collector.ssgNotFoundPaths.add(path)\n      }\n\n      // Update durations.\n      const durations = collector.byPage.get(page) ?? {\n        durationsByPath: new Map<string, number>(),\n      }\n      durations.durationsByPath.set(path, result.duration)\n      collector.byPage.set(page, durations)\n    }\n  }\n\n  const endWorkerPromise = workers.end()\n\n  // Export mode provide static outputs that are not compatible with PPR mode.\n  if (!options.buildExport && nextConfig.experimental.ppr) {\n    // TODO: add message\n    throw new Error('Invariant: PPR cannot be enabled in export mode')\n  }\n\n  // copy prerendered routes to outDir\n  if (!options.buildExport && prerenderManifest) {\n    await Promise.all(\n      Object.keys(prerenderManifest.routes).map(async (route) => {\n        const { srcRoute } = prerenderManifest!.routes[route]\n        const appPageName = mapAppRouteToPage.get(srcRoute || '')\n        const pageName = appPageName || srcRoute || route\n        const isAppPath = Boolean(appPageName)\n        const isAppRouteHandler = appPageName && isAppRouteRoute(appPageName)\n\n        // returning notFound: true from getStaticProps will not\n        // output html/json files during the build\n        if (prerenderManifest!.notFoundRoutes.includes(route)) {\n          return\n        }\n        route = normalizePagePath(route)\n\n        const pagePath = getPagePath(pageName, distDir, undefined, isAppPath)\n        const distPagesDir = join(\n          pagePath,\n          // strip leading / and then recurse number of nested dirs\n          // to place from base folder\n          pageName\n            .slice(1)\n            .split('/')\n            .map(() => '..')\n            .join('/')\n        )\n\n        const orig = join(distPagesDir, route)\n        const handlerSrc = `${orig}.body`\n        const handlerDest = join(outDir, route)\n\n        if (isAppRouteHandler && existsSync(handlerSrc)) {\n          await fs.mkdir(dirname(handlerDest), { recursive: true })\n          await fs.copyFile(handlerSrc, handlerDest)\n          return\n        }\n\n        const htmlDest = join(\n          outDir,\n          `${route}${\n            subFolders && route !== '/index' ? `${sep}index` : ''\n          }.html`\n        )\n        const ampHtmlDest = join(\n          outDir,\n          `${route}.amp${subFolders ? `${sep}index` : ''}.html`\n        )\n        const jsonDest = isAppPath\n          ? join(\n              outDir,\n              `${route}${\n                subFolders && route !== '/index' ? `${sep}index` : ''\n              }.txt`\n            )\n          : join(pagesDataDir, `${route}.json`)\n\n        await fs.mkdir(dirname(htmlDest), { recursive: true })\n        await fs.mkdir(dirname(jsonDest), { recursive: true })\n\n        const htmlSrc = `${orig}.html`\n        const jsonSrc = `${orig}${isAppPath ? RSC_SUFFIX : '.json'}`\n\n        await fs.copyFile(htmlSrc, htmlDest)\n        await fs.copyFile(jsonSrc, jsonDest)\n\n        if (existsSync(`${orig}.amp.html`)) {\n          await fs.mkdir(dirname(ampHtmlDest), { recursive: true })\n          await fs.copyFile(`${orig}.amp.html`, ampHtmlDest)\n        }\n      })\n    )\n  }\n\n  if (Object.keys(ampValidations).length) {\n    console.log(formatAmpMessages(ampValidations))\n  }\n  if (hadValidationError) {\n    throw new ExportError(\n      `AMP Validation caused the export to fail. https://nextjs.org/docs/messages/amp-export-validation`\n    )\n  }\n\n  if (renderError) {\n    throw new ExportError(\n      `Export encountered errors on following paths:\\n\\t${errorPaths\n        .sort()\n        .join('\\n\\t')}`\n    )\n  }\n\n  await fs.writeFile(\n    join(distDir, EXPORT_DETAIL),\n    formatManifest({\n      version: 1,\n      outDirectory: outDir,\n      success: true,\n    }),\n    'utf8'\n  )\n\n  if (telemetry) {\n    await telemetry.flush()\n  }\n\n  await endWorkerPromise\n\n  return collector\n}\n\nexport default async function exportApp(\n  dir: string,\n  options: ExportAppOptions,\n  span: Span\n): Promise<ExportAppResult | null> {\n  const nextExportSpan = span.traceChild('next-export')\n\n  return nextExportSpan.traceAsyncFn(async () => {\n    return await exportAppImpl(dir, options, nextExportSpan)\n  })\n}\n"],"names":["ExportError","exportApp","exportAppImpl","Error","code","setupWorkers","options","nextConfig","exportPageWorker","pages","app","exportAppPageWorker","end","endWorker","Promise","resolve","threads","experimental","cpus","silent","buildExport","Log","info","timeout","staticPageGenerationTimeout","infoPrinted","worker","Worker","require","onRestart","_method","path","attempts","warn","maxRetries","numWorkers","enableWorkerThreads","workerThreads","exposedMethods","default","dir","span","traceChild","traceFn","loadEnvConfig","enabledDirectories","traceAsyncFn","loadConfig","PHASE_EXPORT","distDir","join","telemetry","Telemetry","record","eventCliSession","webpackVersion","cliCommand","isSrcDir","hasNowJson","findUp","cwd","isCustomServer","turboFlag","pagesDir","appDir","subFolders","trailingSlash","buildIdFile","BUILD_ID_FILE","existsSync","customRoutes","filter","config","hasNextSupport","length","buildId","fs","readFile","pagesManifest","SERVER_DIRECTORY","PAGES_MANIFEST","prerenderManifest","PRERENDER_MANIFEST","appRoutePathManifest","APP_PATH_ROUTES_MANIFEST","err","isError","undefined","excludedPrerenderRoutes","Set","Object","keys","defaultPathMap","hasApiRoutes","page","isAPIRoute","dynamicRoutes","add","mapAppRouteToPage","Map","pageName","routePath","entries","set","isAppPageRoute","routes","_isAppDir","outDir","outdir","rm","recursive","force","mkdir","writeFile","EXPORT_DETAIL","formatManifest","version","outDirectory","success","recursiveCopy","CLIENT_STATIC_FILES_PATH","exportPathMap","defaultMap","i18n","images","loader","unoptimized","isNextImageImported","EXPORT_MARKER","then","text","JSON","parse","catch","serverActionsManifest","SERVER_REFERENCE_MANIFEST","output","node","edge","renderOpts","previewProps","preview","nextExport","assetPrefix","replace","dev","basePath","canonicalBase","amp","ampSkipValidation","skipValidation","ampOptimizerConfig","optimizer","locales","locale","defaultLocale","domainLocales","domains","disableOptimizedLoading","supportsDynamicHTML","crossOrigin","optimizeCss","nextConfigOutput","nextScriptWorkers","optimizeFonts","largePageDataBytes","serverActions","serverComponents","nextFontManifest","NEXT_FONT_MANIFEST","strictNextHead","deploymentId","isAppPPREnabled","checkIsAppPPREnabled","ppr","clientTraceMetadata","swrDelta","after","serverRuntimeConfig","publicRuntimeConfig","runtimeConfig","globalThis","__NEXT_DATA__","exportMap","exportPaths","map","denormalizePagePath","normalizePagePath","filteredPaths","route","fallbackEnabledPages","prerenderInfo","fallback","size","SSG_FALLBACK_EXPORT_ERROR","hasMiddleware","middlewareManifest","MIDDLEWARE_MANIFEST","middleware","yellow","bold","progress","createProgress","statusMessage","pagesDataDir","ampValidations","publicDir","CLIENT_PUBLIC_FILES_PATH","workers","results","all","pathMap","exportPage","pageExportSpan","setAttribute","result","ampValidatorPath","validator","parentSpanId","getId","httpAgentOptions","debugOutput","cacheMaxMemorySize","fetchCache","fetchCacheKeyPrefix","cacheHandler","enableExperimentalReact","needsExperimentalReact","prerenderEarlyExit","errorPaths","renderError","hadValidationError","collector","byPath","byPage","ssgNotFoundPaths","turborepoAccessTraceResults","turborepoAccessTraceResult","TurborepoAccessTraceResult","fromSerialized","push","validation","errors","get","revalidate","validateRevalidate","metadata","hasEmptyPrelude","hasPostponed","ssgNotFound","durations","durationsByPath","duration","endWorkerPromise","srcRoute","appPageName","isAppPath","Boolean","isAppRouteHandler","isAppRouteRoute","notFoundRoutes","includes","pagePath","getPagePath","distPagesDir","slice","split","orig","handlerSrc","handlerDest","dirname","copyFile","htmlDest","sep","ampHtmlDest","jsonDest","htmlSrc","jsonSrc","RSC_SUFFIX","console","log","formatAmpMessages","sort","flush","nextExportSpan"],"rangeMappingsmappings":"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"}