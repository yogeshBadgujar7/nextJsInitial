{"version":3,"sources":["../../../../../../src/client/components/react-dev-overlay/internal/helpers/use-error-handler.ts"],"sourcesContent":["import { useEffect } from 'react'\nimport {\n  hydrationErrorState,\n  getReactHydrationDiffSegments,\n} from './hydration-error-info'\nimport { isNextRouterError } from '../../../is-next-router-error'\nimport {\n  isHydrationError,\n  getDefaultHydrationErrorMessage,\n} from '../../../is-hydration-error'\n\nexport type ErrorHandler = (error: Error) => void\n\nif (typeof window !== 'undefined') {\n  try {\n    // Increase the number of stack frames on the client\n    Error.stackTraceLimit = 50\n  } catch {}\n}\n\nlet hasHydrationError = false\nconst errorQueue: Array<Error> = []\nconst rejectionQueue: Array<Error> = []\nconst errorHandlers: Array<ErrorHandler> = []\nconst rejectionHandlers: Array<ErrorHandler> = []\n\nif (typeof window !== 'undefined') {\n  function handleError(error: unknown) {\n    if (isNextRouterError(error)) {\n      return false\n    }\n\n    if (\n      !error ||\n      !(error instanceof Error) ||\n      typeof error.stack !== 'string'\n    ) {\n      // A non-error was thrown, we don't have anything to show. :-(\n      return\n    }\n\n    const isCausedByHydrationFailure = isHydrationError(error)\n    if (\n      isHydrationError(error) &&\n      !error.message.includes(\n        'https://nextjs.org/docs/messages/react-hydration-error'\n      )\n    ) {\n      const reactHydrationDiffSegments = getReactHydrationDiffSegments(\n        error.message\n      )\n      let parsedHydrationErrorState: typeof hydrationErrorState = {}\n      if (reactHydrationDiffSegments) {\n        parsedHydrationErrorState = {\n          ...(error as any).details,\n          ...hydrationErrorState,\n          warning: hydrationErrorState.warning || [\n            getDefaultHydrationErrorMessage(),\n          ],\n          notes: reactHydrationDiffSegments[0],\n          reactOutputComponentDiff: reactHydrationDiffSegments[1],\n        }\n      } else {\n        // If there's any extra information in the error message to display,\n        // append it to the error message details property\n        if (hydrationErrorState.warning) {\n          // The patched console.error found hydration errors logged by React\n          // Append the logged warning to the error message\n          parsedHydrationErrorState = {\n            ...(error as any).details,\n            // It contains the warning, component stack, server and client tag names\n            ...hydrationErrorState,\n          }\n        }\n        error.message +=\n          '\\nSee more info here: https://nextjs.org/docs/messages/react-hydration-error'\n      }\n      ;(error as any).details = parsedHydrationErrorState\n    }\n\n    // Only queue one hydration every time\n    if (isCausedByHydrationFailure) {\n      if (!hasHydrationError) {\n        errorQueue.push(error)\n      }\n      hasHydrationError = true\n    }\n    for (const handler of errorHandlers) {\n      handler(error)\n    }\n  }\n  // These event handlers must be added outside of the hook because there is no\n  // guarantee that the hook will be alive in a mounted component in time to\n  // when the errors occur.\n  // uncaught errors go through reportError\n  window.addEventListener(\n    'error',\n    (event: WindowEventMap['error']): void | boolean => {\n      if (handleError(event.error) === false) {\n        event.preventDefault()\n        return false\n      }\n    }\n  )\n  // caught errors go through console.error\n  const origConsoleError = window.console.error\n  window.console.error = (...args) => {\n    // See https://github.com/facebook/react/blob/d50323eb845c5fde0d720cae888bf35dedd05506/packages/react-reconciler/src/ReactFiberErrorLogger.js#L78\n    const error = process.env.NODE_ENV !== 'production' ? args[1] : args[0]\n    if (handleError(error) !== false) {\n      origConsoleError.apply(window.console, args)\n    }\n  }\n  window.addEventListener(\n    'unhandledrejection',\n    (ev: WindowEventMap['unhandledrejection']): void => {\n      const reason = ev?.reason\n      if (\n        !reason ||\n        !(reason instanceof Error) ||\n        typeof reason.stack !== 'string'\n      ) {\n        // A non-error was thrown, we don't have anything to show. :-(\n        return\n      }\n\n      const e = reason\n      rejectionQueue.push(e)\n      for (const handler of rejectionHandlers) {\n        handler(e)\n      }\n    }\n  )\n}\n\nexport function useErrorHandler(\n  handleOnUnhandledError: ErrorHandler,\n  handleOnUnhandledRejection: ErrorHandler\n) {\n  useEffect(() => {\n    // Handle queued errors.\n    errorQueue.forEach(handleOnUnhandledError)\n    rejectionQueue.forEach(handleOnUnhandledRejection)\n\n    // Listen to new errors.\n    errorHandlers.push(handleOnUnhandledError)\n    rejectionHandlers.push(handleOnUnhandledRejection)\n\n    return () => {\n      // Remove listeners.\n      errorHandlers.splice(errorHandlers.indexOf(handleOnUnhandledError), 1)\n      rejectionHandlers.splice(\n        rejectionHandlers.indexOf(handleOnUnhandledRejection),\n        1\n      )\n    }\n  }, [handleOnUnhandledError, handleOnUnhandledRejection])\n}\n"],"names":["useErrorHandler","window","Error","stackTraceLimit","hasHydrationError","errorQueue","rejectionQueue","errorHandlers","rejectionHandlers","handleError","error","isNextRouterError","stack","isCausedByHydrationFailure","isHydrationError","message","includes","reactHydrationDiffSegments","getReactHydrationDiffSegments","parsedHydrationErrorState","details","hydrationErrorState","warning","getDefaultHydrationErrorMessage","notes","reactOutputComponentDiff","push","handler","addEventListener","event","preventDefault","origConsoleError","console","args","process","env","NODE_ENV","apply","ev","reason","e","handleOnUnhandledError","handleOnUnhandledRejection","useEffect","forEach","splice","indexOf"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}