{"version":3,"sources":["../../../../../../src/client/components/react-dev-overlay/internal/helpers/nodeStackFrames.ts"],"sourcesContent":["import { parse } from 'next/dist/compiled/stacktrace-parser'\nimport type { StackFrame } from 'next/dist/compiled/stacktrace-parser'\nimport {\n  decorateServerError,\n  type ErrorSourceType,\n} from '../../../../../shared/lib/error-source'\n\nexport function getFilesystemFrame(frame: StackFrame): StackFrame {\n  const f: StackFrame = { ...frame }\n\n  if (typeof f.file === 'string') {\n    if (\n      // Posix:\n      f.file.startsWith('/') ||\n      // Win32:\n      /^[a-z]:\\\\/i.test(f.file) ||\n      // Win32 UNC:\n      f.file.startsWith('\\\\\\\\')\n    ) {\n      f.file = `file://${f.file}`\n    }\n  }\n\n  return f\n}\n\nexport function getServerError(error: Error, type: ErrorSourceType): Error {\n  let n: Error\n  try {\n    throw new Error(error.message)\n  } catch (e) {\n    n = e as Error\n  }\n\n  n.name = error.name\n  try {\n    n.stack = `${n.toString()}\\n${parse(error.stack!)\n      .map(getFilesystemFrame)\n      .map((f) => {\n        let str = `    at ${f.methodName}`\n        if (f.file) {\n          let loc = f.file\n          if (f.lineNumber) {\n            loc += `:${f.lineNumber}`\n            if (f.column) {\n              loc += `:${f.column}`\n            }\n          }\n          str += ` (${loc})`\n        }\n        return str\n      })\n      .join('\\n')}`\n  } catch {\n    n.stack = error.stack\n  }\n\n  decorateServerError(n, type)\n  return n\n}\n"],"names":["getFilesystemFrame","getServerError","frame","f","file","startsWith","test","error","type","n","Error","message","e","name","stack","toString","parse","map","str","methodName","loc","lineNumber","column","join","decorateServerError"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;;;;;IAOgBA,kBAAkB;eAAlBA;;IAmBAC,cAAc;eAAdA;;;kCA1BM;6BAKf;AAEA,SAASD,mBAAmBE,KAAiB;IAClD,MAAMC,IAAgB;QAAE,GAAGD,KAAK;IAAC;IAEjC,IAAI,OAAOC,EAAEC,IAAI,KAAK,UAAU;QAC9B,IACE,SAAS;QACTD,EAAEC,IAAI,CAACC,UAAU,CAAC,QAClB,SAAS;QACT,aAAaC,IAAI,CAACH,EAAEC,IAAI,KACxB,aAAa;QACbD,EAAEC,IAAI,CAACC,UAAU,CAAC,SAClB;YACAF,EAAEC,IAAI,GAAG,AAAC,YAASD,EAAEC,IAAI;QAC3B;IACF;IAEA,OAAOD;AACT;AAEO,SAASF,eAAeM,KAAY,EAAEC,IAAqB;IAChE,IAAIC;IACJ,IAAI;QACF,MAAM,IAAIC,MAAMH,MAAMI,OAAO;IAC/B,EAAE,OAAOC,GAAG;QACVH,IAAIG;IACN;IAEAH,EAAEI,IAAI,GAAGN,MAAMM,IAAI;IACnB,IAAI;QACFJ,EAAEK,KAAK,GAAG,AAAGL,EAAEM,QAAQ,KAAG,OAAIC,IAAAA,uBAAK,EAACT,MAAMO,KAAK,EAC5CG,GAAG,CAACjB,oBACJiB,GAAG,CAAC,CAACd;YACJ,IAAIe,MAAM,AAAC,YAASf,EAAEgB,UAAU;YAChC,IAAIhB,EAAEC,IAAI,EAAE;gBACV,IAAIgB,MAAMjB,EAAEC,IAAI;gBAChB,IAAID,EAAEkB,UAAU,EAAE;oBAChBD,OAAO,AAAC,MAAGjB,EAAEkB,UAAU;oBACvB,IAAIlB,EAAEmB,MAAM,EAAE;wBACZF,OAAO,AAAC,MAAGjB,EAAEmB,MAAM;oBACrB;gBACF;gBACAJ,OAAO,AAAC,OAAIE,MAAI;YAClB;YACA,OAAOF;QACT,GACCK,IAAI,CAAC;IACV,EAAE,UAAM;QACNd,EAAEK,KAAK,GAAGP,MAAMO,KAAK;IACvB;IAEAU,IAAAA,gCAAmB,EAACf,GAAGD;IACvB,OAAOC;AACT"}