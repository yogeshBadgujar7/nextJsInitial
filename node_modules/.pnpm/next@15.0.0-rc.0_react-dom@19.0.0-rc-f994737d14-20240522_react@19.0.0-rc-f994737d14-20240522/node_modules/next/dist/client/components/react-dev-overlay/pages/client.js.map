{"version":3,"sources":["../../../../../src/client/components/react-dev-overlay/pages/client.ts"],"sourcesContent":["import * as Bus from './bus'\nimport { parseStack } from '../internal/helpers/parseStack'\nimport { parseComponentStack } from '../internal/helpers/parse-component-stack'\nimport {\n  getReactHydrationDiffSegments,\n  hydrationErrorState,\n  patchConsoleError,\n} from '../internal/helpers/hydration-error-info'\nimport {\n  ACTION_BEFORE_REFRESH,\n  ACTION_BUILD_ERROR,\n  ACTION_BUILD_OK,\n  ACTION_REFRESH,\n  ACTION_UNHANDLED_ERROR,\n  ACTION_UNHANDLED_REJECTION,\n  ACTION_VERSION_INFO,\n} from '../shared'\nimport type { VersionInfo } from '../../../../server/dev/parse-version-info'\nimport {\n  getDefaultHydrationErrorMessage,\n  isHydrationError,\n} from '../../is-hydration-error'\n\n// Patch console.error to collect information about hydration errors\npatchConsoleError()\n\nlet isRegistered = false\nlet stackTraceLimit: number | undefined = undefined\n\nfunction handleError(error: unknown) {\n  if (!error || !(error instanceof Error) || typeof error.stack !== 'string') {\n    // A non-error was thrown, we don't have anything to show. :-(\n    return\n  }\n\n  if (\n    isHydrationError(error) &&\n    !error.message.includes(\n      'https://nextjs.org/docs/messages/react-hydration-error'\n    )\n  ) {\n    const reactHydrationDiffSegments = getReactHydrationDiffSegments(\n      error.message\n    )\n    let parsedHydrationErrorState: typeof hydrationErrorState = {}\n    if (reactHydrationDiffSegments) {\n      parsedHydrationErrorState = {\n        ...(error as any).details,\n        warning: hydrationErrorState.warning || [\n          getDefaultHydrationErrorMessage(),\n        ],\n        notes: reactHydrationDiffSegments[0],\n        reactOutputComponentDiff: reactHydrationDiffSegments[1],\n      }\n    } else {\n      // If there's any extra information in the error message to display,\n      // append it to the error message details property\n      if (hydrationErrorState.warning) {\n        // The patched console.error found hydration errors logged by React\n        // Append the logged warning to the error message\n        parsedHydrationErrorState = {\n          ...(error as any).details,\n          // It contains the warning, component stack, server and client tag names\n          ...hydrationErrorState,\n        }\n      }\n      error.message += `\\nSee more info here: https://nextjs.org/docs/messages/react-hydration-error`\n    }\n    ;(error as any).details = parsedHydrationErrorState\n  }\n\n  const e = error\n  const componentStackTrace =\n    (error as any)._componentStack || hydrationErrorState.componentStack\n  const componentStackFrames =\n    typeof componentStackTrace === 'string'\n      ? parseComponentStack(componentStackTrace)\n      : undefined\n\n  // Skip ModuleBuildError and ModuleNotFoundError, as it will be sent through onBuildError callback.\n  // This is to avoid same error as different type showing up on client to cause flashing.\n  if (e.name !== 'ModuleBuildError' && e.name !== 'ModuleNotFoundError') {\n    Bus.emit({\n      type: ACTION_UNHANDLED_ERROR,\n      reason: error,\n      frames: parseStack(e.stack!),\n      componentStackFrames,\n    })\n  }\n}\n\nlet origConsoleError = console.error\nfunction nextJsHandleConsoleError(...args: any[]) {\n  // See https://github.com/facebook/react/blob/d50323eb845c5fde0d720cae888bf35dedd05506/packages/react-reconciler/src/ReactFiberErrorLogger.js#L78\n  const error = process.env.NODE_ENV !== 'production' ? args[1] : args[0]\n  handleError(error)\n  origConsoleError.apply(window.console, args)\n}\n\nfunction onUnhandledError(event: ErrorEvent) {\n  const error = event?.error\n  handleError(error)\n}\n\nfunction onUnhandledRejection(ev: PromiseRejectionEvent) {\n  const reason = ev?.reason\n  if (\n    !reason ||\n    !(reason instanceof Error) ||\n    typeof reason.stack !== 'string'\n  ) {\n    // A non-error was thrown, we don't have anything to show. :-(\n    return\n  }\n\n  const e = reason\n  Bus.emit({\n    type: ACTION_UNHANDLED_REJECTION,\n    reason: reason,\n    frames: parseStack(e.stack!),\n  })\n}\n\nexport function register() {\n  if (isRegistered) {\n    return\n  }\n  isRegistered = true\n\n  try {\n    const limit = Error.stackTraceLimit\n    Error.stackTraceLimit = 50\n    stackTraceLimit = limit\n  } catch {}\n\n  window.addEventListener('error', onUnhandledError)\n  window.addEventListener('unhandledrejection', onUnhandledRejection)\n  window.console.error = nextJsHandleConsoleError\n}\n\nexport function unregister() {\n  if (!isRegistered) {\n    return\n  }\n  isRegistered = false\n\n  if (stackTraceLimit !== undefined) {\n    try {\n      Error.stackTraceLimit = stackTraceLimit\n    } catch {}\n    stackTraceLimit = undefined\n  }\n\n  window.removeEventListener('error', onUnhandledError)\n  window.removeEventListener('unhandledrejection', onUnhandledRejection)\n  window.console.error = origConsoleError\n}\n\nexport function onBuildOk() {\n  Bus.emit({ type: ACTION_BUILD_OK })\n}\n\nexport function onBuildError(message: string) {\n  Bus.emit({ type: ACTION_BUILD_ERROR, message })\n}\n\nexport function onRefresh() {\n  Bus.emit({ type: ACTION_REFRESH })\n}\n\nexport function onBeforeRefresh() {\n  Bus.emit({ type: ACTION_BEFORE_REFRESH })\n}\n\nexport function onVersionInfo(versionInfo: VersionInfo) {\n  Bus.emit({ type: ACTION_VERSION_INFO, versionInfo })\n}\n\nexport { getErrorByType } from '../internal/helpers/getErrorByType'\nexport { getServerError } from '../internal/helpers/nodeStackFrames'\nexport { default as ReactDevOverlay } from './ReactDevOverlay'\n"],"names":["ReactDevOverlay","getErrorByType","getServerError","onBeforeRefresh","onBuildError","onBuildOk","onRefresh","onVersionInfo","register","unregister","patchConsoleError","isRegistered","stackTraceLimit","undefined","handleError","error","Error","stack","isHydrationError","message","includes","reactHydrationDiffSegments","getReactHydrationDiffSegments","parsedHydrationErrorState","details","warning","hydrationErrorState","getDefaultHydrationErrorMessage","notes","reactOutputComponentDiff","e","componentStackTrace","_componentStack","componentStack","componentStackFrames","parseComponentStack","name","Bus","emit","type","ACTION_UNHANDLED_ERROR","reason","frames","parseStack","origConsoleError","console","nextJsHandleConsoleError","args","process","env","NODE_ENV","apply","window","onUnhandledError","event","onUnhandledRejection","ev","ACTION_UNHANDLED_REJECTION","limit","addEventListener","removeEventListener","ACTION_BUILD_OK","ACTION_BUILD_ERROR","ACTION_REFRESH","ACTION_BEFORE_REFRESH","versionInfo","ACTION_VERSION_INFO"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}