{"version":3,"sources":["../../../../../src/client/components/react-dev-overlay/app/hot-reloader-client.tsx"],"sourcesContent":["import type { ReactNode } from 'react'\nimport { useCallback, useEffect, startTransition, useMemo } from 'react'\nimport stripAnsi from 'next/dist/compiled/strip-ansi'\nimport formatWebpackMessages from '../internal/helpers/format-webpack-messages'\nimport { useRouter } from '../../navigation'\nimport {\n  ACTION_BEFORE_REFRESH,\n  ACTION_BUILD_ERROR,\n  ACTION_BUILD_OK,\n  ACTION_REFRESH,\n  ACTION_UNHANDLED_ERROR,\n  ACTION_UNHANDLED_REJECTION,\n  ACTION_VERSION_INFO,\n  useErrorOverlayReducer,\n} from '../shared'\nimport { parseStack } from '../internal/helpers/parseStack'\nimport ReactDevOverlay from './ReactDevOverlay'\nimport { useErrorHandler } from '../internal/helpers/use-error-handler'\nimport { RuntimeErrorHandler } from '../internal/helpers/runtime-error-handler'\nimport {\n  useSendMessage,\n  useTurbopack,\n  useWebsocket,\n  useWebsocketPing,\n} from '../internal/helpers/use-websocket'\nimport { parseComponentStack } from '../internal/helpers/parse-component-stack'\nimport type { VersionInfo } from '../../../../server/dev/parse-version-info'\nimport { HMR_ACTIONS_SENT_TO_BROWSER } from '../../../../server/dev/hot-reloader-types'\nimport type {\n  HMR_ACTION_TYPES,\n  TurbopackMsgToBrowser,\n} from '../../../../server/dev/hot-reloader-types'\nimport { extractModulesFromTurbopackMessage } from '../../../../server/dev/extract-modules-from-turbopack-message'\nimport { REACT_REFRESH_FULL_RELOAD_FROM_ERROR } from '../shared'\nimport type { HydrationErrorState } from '../internal/helpers/hydration-error-info'\ninterface Dispatcher {\n  onBuildOk(): void\n  onBuildError(message: string): void\n  onVersionInfo(versionInfo: VersionInfo): void\n  onBeforeRefresh(): void\n  onRefresh(): void\n}\n\nlet mostRecentCompilationHash: any = null\nlet __nextDevClientId = Math.round(Math.random() * 100 + Date.now())\nlet reloading = false\nlet startLatency: number | null = null\n\nfunction onBeforeFastRefresh(dispatcher: Dispatcher, hasUpdates: boolean) {\n  if (hasUpdates) {\n    dispatcher.onBeforeRefresh()\n  }\n}\n\nfunction onFastRefresh(\n  dispatcher: Dispatcher,\n  sendMessage: (message: string) => void,\n  updatedModules: ReadonlyArray<string>\n) {\n  dispatcher.onBuildOk()\n\n  reportHmrLatency(sendMessage, updatedModules)\n\n  dispatcher.onRefresh()\n}\n\nfunction reportHmrLatency(\n  sendMessage: (message: string) => void,\n  updatedModules: ReadonlyArray<string>\n) {\n  if (!startLatency) return\n  let endLatency = Date.now()\n  const latency = endLatency - startLatency\n  console.log(`[Fast Refresh] done in ${latency}ms`)\n  sendMessage(\n    JSON.stringify({\n      event: 'client-hmr-latency',\n      id: window.__nextDevClientId,\n      startTime: startLatency,\n      endTime: endLatency,\n      page: window.location.pathname,\n      updatedModules,\n      // Whether the page (tab) was hidden at the time the event occurred.\n      // This can impact the accuracy of the event's timing.\n      isPageHidden: document.visibilityState === 'hidden',\n    })\n  )\n}\n\n// There is a newer version of the code available.\nfunction handleAvailableHash(hash: string) {\n  // Update last known compilation hash.\n  mostRecentCompilationHash = hash\n}\n\n/**\n * Is there a newer version of this code available?\n * For webpack: Check if the hash changed compared to __webpack_hash__\n * For Turbopack: Always true because it doesn't have __webpack_hash__\n */\nfunction isUpdateAvailable() {\n  if (process.env.TURBOPACK) {\n    return true\n  }\n\n  /* globals __webpack_hash__ */\n  // __webpack_hash__ is the hash of the current compilation.\n  // It's a global variable injected by Webpack.\n  return mostRecentCompilationHash !== __webpack_hash__\n}\n\n// Webpack disallows updates in other states.\nfunction canApplyUpdates() {\n  // @ts-expect-error module.hot exists\n  return module.hot.status() === 'idle'\n}\nfunction afterApplyUpdates(fn: any) {\n  if (canApplyUpdates()) {\n    fn()\n  } else {\n    function handler(status: any) {\n      if (status === 'idle') {\n        // @ts-expect-error module.hot exists\n        module.hot.removeStatusHandler(handler)\n        fn()\n      }\n    }\n    // @ts-expect-error module.hot exists\n    module.hot.addStatusHandler(handler)\n  }\n}\n\nfunction performFullReload(err: any, sendMessage: any) {\n  const stackTrace =\n    err &&\n    ((err.stack && err.stack.split('\\n').slice(0, 5).join('\\n')) ||\n      err.message ||\n      err + '')\n\n  sendMessage(\n    JSON.stringify({\n      event: 'client-full-reload',\n      stackTrace,\n      hadRuntimeError: !!RuntimeErrorHandler.hadRuntimeError,\n      dependencyChain: err ? err.dependencyChain : undefined,\n    })\n  )\n\n  if (reloading) return\n  reloading = true\n  window.location.reload()\n}\n\n// Attempt to update code on the fly, fall back to a hard reload.\nfunction tryApplyUpdates(\n  onBeforeUpdate: (hasUpdates: boolean) => void,\n  onHotUpdateSuccess: (updatedModules: string[]) => void,\n  sendMessage: any,\n  dispatcher: Dispatcher\n) {\n  if (!isUpdateAvailable() || !canApplyUpdates()) {\n    dispatcher.onBuildOk()\n    return\n  }\n\n  function handleApplyUpdates(err: any, updatedModules: string[] | null) {\n    if (err || RuntimeErrorHandler.hadRuntimeError || !updatedModules) {\n      if (err) {\n        console.warn(\n          '[Fast Refresh] performing full reload\\n\\n' +\n            \"Fast Refresh will perform a full reload when you edit a file that's imported by modules outside of the React rendering tree.\\n\" +\n            'You might have a file which exports a React component but also exports a value that is imported by a non-React component file.\\n' +\n            'Consider migrating the non-React component export to a separate file and importing it into both files.\\n\\n' +\n            'It is also possible the parent component of the component you edited is a class component, which disables Fast Refresh.\\n' +\n            'Fast Refresh requires at least one parent function component in your React tree.'\n        )\n      } else if (RuntimeErrorHandler.hadRuntimeError) {\n        console.warn(REACT_REFRESH_FULL_RELOAD_FROM_ERROR)\n      }\n      performFullReload(err, sendMessage)\n      return\n    }\n\n    const hasUpdates = Boolean(updatedModules.length)\n    if (typeof onHotUpdateSuccess === 'function') {\n      // Maybe we want to do something.\n      onHotUpdateSuccess(updatedModules)\n    }\n\n    if (isUpdateAvailable()) {\n      // While we were updating, there was a new update! Do it again.\n      tryApplyUpdates(\n        hasUpdates ? () => {} : onBeforeUpdate,\n        hasUpdates ? () => dispatcher.onBuildOk() : onHotUpdateSuccess,\n        sendMessage,\n        dispatcher\n      )\n    } else {\n      dispatcher.onBuildOk()\n      if (process.env.__NEXT_TEST_MODE) {\n        afterApplyUpdates(() => {\n          if (self.__NEXT_HMR_CB) {\n            self.__NEXT_HMR_CB()\n            self.__NEXT_HMR_CB = null\n          }\n        })\n      }\n    }\n  }\n\n  // https://webpack.js.org/api/hot-module-replacement/#check\n  // @ts-expect-error module.hot exists\n  module.hot\n    .check(/* autoApply */ false)\n    .then((updatedModules: any[] | null) => {\n      if (!updatedModules) {\n        return null\n      }\n\n      if (typeof onBeforeUpdate === 'function') {\n        const hasUpdates = Boolean(updatedModules.length)\n        onBeforeUpdate(hasUpdates)\n      }\n      // https://webpack.js.org/api/hot-module-replacement/#apply\n      // @ts-expect-error module.hot exists\n      return module.hot.apply()\n    })\n    .then(\n      (updatedModules: any[] | null) => {\n        handleApplyUpdates(null, updatedModules)\n      },\n      (err: any) => {\n        handleApplyUpdates(err, null)\n      }\n    )\n}\n\n/** Handles messages from the sevrer for the App Router. */\nfunction processMessage(\n  obj: HMR_ACTION_TYPES,\n  sendMessage: (message: string) => void,\n  processTurbopackMessage: (msg: TurbopackMsgToBrowser) => void,\n  router: ReturnType<typeof useRouter>,\n  dispatcher: Dispatcher\n) {\n  if (!('action' in obj)) {\n    return\n  }\n\n  function handleErrors(errors: ReadonlyArray<unknown>) {\n    // \"Massage\" webpack messages.\n    const formatted = formatWebpackMessages({\n      errors: errors,\n      warnings: [],\n    })\n\n    // Only show the first error.\n    dispatcher.onBuildError(formatted.errors[0])\n\n    // Also log them to the console.\n    for (let i = 0; i < formatted.errors.length; i++) {\n      console.error(stripAnsi(formatted.errors[i]))\n    }\n\n    // Do not attempt to reload now.\n    // We will reload on next success instead.\n    if (process.env.__NEXT_TEST_MODE) {\n      if (self.__NEXT_HMR_CB) {\n        self.__NEXT_HMR_CB(formatted.errors[0])\n        self.__NEXT_HMR_CB = null\n      }\n    }\n  }\n\n  function handleHotUpdate() {\n    if (process.env.TURBOPACK) {\n      dispatcher.onBuildOk()\n    } else {\n      tryApplyUpdates(\n        function onBeforeHotUpdate(hasUpdates: boolean) {\n          onBeforeFastRefresh(dispatcher, hasUpdates)\n        },\n        function onSuccessfulHotUpdate(webpackUpdatedModules: string[]) {\n          // Only dismiss it when we're sure it's a hot update.\n          // Otherwise it would flicker right before the reload.\n          onFastRefresh(dispatcher, sendMessage, webpackUpdatedModules)\n        },\n        sendMessage,\n        dispatcher\n      )\n    }\n  }\n\n  switch (obj.action) {\n    case HMR_ACTIONS_SENT_TO_BROWSER.BUILDING: {\n      startLatency = Date.now()\n      console.log('[Fast Refresh] rebuilding')\n      break\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.BUILT:\n    case HMR_ACTIONS_SENT_TO_BROWSER.SYNC: {\n      if (obj.hash) {\n        handleAvailableHash(obj.hash)\n      }\n\n      const { errors, warnings } = obj\n\n      // Is undefined when it's a 'built' event\n      if ('versionInfo' in obj) dispatcher.onVersionInfo(obj.versionInfo)\n\n      const hasErrors = Boolean(errors && errors.length)\n      // Compilation with errors (e.g. syntax error or missing modules).\n      if (hasErrors) {\n        sendMessage(\n          JSON.stringify({\n            event: 'client-error',\n            errorCount: errors.length,\n            clientId: __nextDevClientId,\n          })\n        )\n\n        handleErrors(errors)\n        return\n      }\n\n      const hasWarnings = Boolean(warnings && warnings.length)\n      if (hasWarnings) {\n        sendMessage(\n          JSON.stringify({\n            event: 'client-warning',\n            warningCount: warnings.length,\n            clientId: __nextDevClientId,\n          })\n        )\n\n        // Print warnings to the console.\n        const formattedMessages = formatWebpackMessages({\n          warnings: warnings,\n          errors: [],\n        })\n\n        for (let i = 0; i < formattedMessages.warnings.length; i++) {\n          if (i === 5) {\n            console.warn(\n              'There were more warnings in other files.\\n' +\n                'You can find a complete log in the terminal.'\n            )\n            break\n          }\n          console.warn(stripAnsi(formattedMessages.warnings[i]))\n        }\n\n        // No early return here as we need to apply modules in the same way between warnings only and compiles without warnings\n      }\n\n      sendMessage(\n        JSON.stringify({\n          event: 'client-success',\n          clientId: __nextDevClientId,\n        })\n      )\n\n      if (obj.action === HMR_ACTIONS_SENT_TO_BROWSER.BUILT) {\n        // Handle hot updates\n        handleHotUpdate()\n      }\n      return\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_CONNECTED: {\n      processTurbopackMessage({\n        type: HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_CONNECTED,\n      })\n      break\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_MESSAGE: {\n      const updatedModules = extractModulesFromTurbopackMessage(obj.data)\n      dispatcher.onBeforeRefresh()\n      processTurbopackMessage({\n        type: HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_MESSAGE,\n        data: obj.data,\n      })\n      dispatcher.onRefresh()\n      if (RuntimeErrorHandler.hadRuntimeError) {\n        console.warn(REACT_REFRESH_FULL_RELOAD_FROM_ERROR)\n        performFullReload(null, sendMessage)\n      }\n      reportHmrLatency(sendMessage, updatedModules)\n      break\n    }\n    // TODO-APP: make server component change more granular\n    case HMR_ACTIONS_SENT_TO_BROWSER.SERVER_COMPONENT_CHANGES: {\n      sendMessage(\n        JSON.stringify({\n          event: 'server-component-reload-page',\n          clientId: __nextDevClientId,\n        })\n      )\n      if (RuntimeErrorHandler.hadRuntimeError) {\n        if (reloading) return\n        reloading = true\n        return window.location.reload()\n      }\n      startTransition(() => {\n        router.fastRefresh()\n        dispatcher.onRefresh()\n      })\n\n      if (process.env.__NEXT_TEST_MODE) {\n        if (self.__NEXT_HMR_CB) {\n          self.__NEXT_HMR_CB()\n          self.__NEXT_HMR_CB = null\n        }\n      }\n\n      return\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE: {\n      sendMessage(\n        JSON.stringify({\n          event: 'client-reload-page',\n          clientId: __nextDevClientId,\n        })\n      )\n      if (reloading) return\n      reloading = true\n      return window.location.reload()\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.ADDED_PAGE:\n    case HMR_ACTIONS_SENT_TO_BROWSER.REMOVED_PAGE: {\n      // TODO-APP: potentially only refresh if the currently viewed page was added/removed.\n      return router.fastRefresh()\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.SERVER_ERROR: {\n      const { errorJSON } = obj\n      if (errorJSON) {\n        const { message, stack } = JSON.parse(errorJSON)\n        const error = new Error(message)\n        error.stack = stack\n        handleErrors([error])\n      }\n      return\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.DEV_PAGES_MANIFEST_UPDATE: {\n      return\n    }\n    default: {\n    }\n  }\n}\n\nexport default function HotReload({\n  assetPrefix,\n  children,\n}: {\n  assetPrefix: string\n  children?: ReactNode\n}) {\n  const [state, dispatch] = useErrorOverlayReducer()\n\n  const dispatcher = useMemo<Dispatcher>(() => {\n    return {\n      onBuildOk() {\n        dispatch({ type: ACTION_BUILD_OK })\n      },\n      onBuildError(message) {\n        dispatch({ type: ACTION_BUILD_ERROR, message })\n      },\n      onBeforeRefresh() {\n        dispatch({ type: ACTION_BEFORE_REFRESH })\n      },\n      onRefresh() {\n        dispatch({ type: ACTION_REFRESH })\n      },\n      onVersionInfo(versionInfo) {\n        dispatch({ type: ACTION_VERSION_INFO, versionInfo })\n      },\n    }\n  }, [dispatch])\n\n  const handleOnUnhandledError = useCallback(\n    (error: Error): void => {\n      const errorDetails = (error as any).details as\n        | HydrationErrorState\n        | undefined\n      // Component stack is added to the error in use-error-handler in case there was a hydration errror\n      const componentStackTrace =\n        (error as any)._componentStack || errorDetails?.componentStack\n      const warning = errorDetails?.warning\n      dispatch({\n        type: ACTION_UNHANDLED_ERROR,\n        reason: error,\n        frames: parseStack(error.stack!),\n        componentStackFrames:\n          typeof componentStackTrace === 'string'\n            ? parseComponentStack(componentStackTrace)\n            : undefined,\n        warning,\n      })\n    },\n    [dispatch]\n  )\n  const handleOnUnhandledRejection = useCallback(\n    (reason: Error): void => {\n      dispatch({\n        type: ACTION_UNHANDLED_REJECTION,\n        reason: reason,\n        frames: parseStack(reason.stack!),\n      })\n    },\n    [dispatch]\n  )\n  const handleOnReactError = useCallback(() => {\n    RuntimeErrorHandler.hadRuntimeError = true\n  }, [])\n  useErrorHandler(handleOnUnhandledError, handleOnUnhandledRejection)\n\n  const webSocketRef = useWebsocket(assetPrefix)\n  useWebsocketPing(webSocketRef)\n  const sendMessage = useSendMessage(webSocketRef)\n  const processTurbopackMessage = useTurbopack(sendMessage, (err) =>\n    performFullReload(err, sendMessage)\n  )\n\n  const router = useRouter()\n\n  useEffect(() => {\n    const websocket = webSocketRef.current\n    if (!websocket) return\n\n    const handler = (event: MessageEvent<any>) => {\n      try {\n        const obj = JSON.parse(event.data)\n        processMessage(\n          obj,\n          sendMessage,\n          processTurbopackMessage,\n          router,\n          dispatcher\n        )\n      } catch (err: any) {\n        console.warn(\n          '[HMR] Invalid message: ' + event.data + '\\n' + (err?.stack ?? '')\n        )\n      }\n    }\n\n    websocket.addEventListener('message', handler)\n    return () => websocket.removeEventListener('message', handler)\n  }, [sendMessage, router, webSocketRef, dispatcher, processTurbopackMessage])\n\n  return (\n    <ReactDevOverlay onReactError={handleOnReactError} state={state}>\n      {children}\n    </ReactDevOverlay>\n  )\n}\n"],"names":["HotReload","mostRecentCompilationHash","__nextDevClientId","Math","round","random","Date","now","reloading","startLatency","onBeforeFastRefresh","dispatcher","hasUpdates","onBeforeRefresh","onFastRefresh","sendMessage","updatedModules","onBuildOk","reportHmrLatency","onRefresh","endLatency","latency","console","log","JSON","stringify","event","id","window","startTime","endTime","page","location","pathname","isPageHidden","document","visibilityState","handleAvailableHash","hash","isUpdateAvailable","process","env","TURBOPACK","__webpack_hash__","canApplyUpdates","module","hot","status","afterApplyUpdates","fn","handler","removeStatusHandler","addStatusHandler","performFullReload","err","stackTrace","stack","split","slice","join","message","hadRuntimeError","RuntimeErrorHandler","dependencyChain","undefined","reload","tryApplyUpdates","onBeforeUpdate","onHotUpdateSuccess","handleApplyUpdates","warn","REACT_REFRESH_FULL_RELOAD_FROM_ERROR","Boolean","length","__NEXT_TEST_MODE","self","__NEXT_HMR_CB","check","then","apply","processMessage","obj","processTurbopackMessage","router","handleErrors","errors","formatted","formatWebpackMessages","warnings","onBuildError","i","error","stripAnsi","handleHotUpdate","onBeforeHotUpdate","onSuccessfulHotUpdate","webpackUpdatedModules","action","HMR_ACTIONS_SENT_TO_BROWSER","BUILDING","BUILT","SYNC","onVersionInfo","versionInfo","hasErrors","errorCount","clientId","hasWarnings","warningCount","formattedMessages","TURBOPACK_CONNECTED","type","TURBOPACK_MESSAGE","extractModulesFromTurbopackMessage","data","SERVER_COMPONENT_CHANGES","startTransition","fastRefresh","RELOAD_PAGE","ADDED_PAGE","REMOVED_PAGE","SERVER_ERROR","errorJSON","parse","Error","DEV_PAGES_MANIFEST_UPDATE","assetPrefix","children","state","dispatch","useErrorOverlayReducer","useMemo","ACTION_BUILD_OK","ACTION_BUILD_ERROR","ACTION_BEFORE_REFRESH","ACTION_REFRESH","ACTION_VERSION_INFO","handleOnUnhandledError","useCallback","errorDetails","details","componentStackTrace","_componentStack","componentStack","warning","ACTION_UNHANDLED_ERROR","reason","frames","parseStack","componentStackFrames","parseComponentStack","handleOnUnhandledRejection","ACTION_UNHANDLED_REJECTION","handleOnReactError","useErrorHandler","webSocketRef","useWebsocket","useWebsocketPing","useSendMessage","useTurbopack","useRouter","useEffect","websocket","current","addEventListener","removeEventListener","ReactDevOverlay","onReactError"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}