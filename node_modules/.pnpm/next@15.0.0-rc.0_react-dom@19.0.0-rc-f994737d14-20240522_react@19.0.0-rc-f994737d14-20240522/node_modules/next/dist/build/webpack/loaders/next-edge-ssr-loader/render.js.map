{"version":3,"sources":["../../../../../src/build/webpack/loaders/next-edge-ssr-loader/render.ts"],"sourcesContent":["import type { NextConfigComplete } from '../../../../server/config-shared'\n\nimport type { DocumentType, AppType } from '../../../../shared/lib/utils'\nimport type { BuildManifest } from '../../../../server/get-page-files'\nimport type { ReactLoadableManifest } from '../../../../server/load-components'\nimport type { ClientReferenceManifest } from '../../plugins/flight-manifest-plugin'\nimport type { NextFontManifest } from '../../plugins/next-font-manifest-plugin'\nimport type { NextFetchEvent } from '../../../../server/web/spec-extension/fetch-event'\n\nimport WebServer from '../../../../server/web-server'\nimport {\n  WebNextRequest,\n  WebNextResponse,\n} from '../../../../server/base-http/web'\nimport { SERVER_RUNTIME } from '../../../../lib/constants'\nimport type { ManifestRewriteRoute, PrerenderManifest } from '../../..'\nimport { normalizeAppPath } from '../../../../shared/lib/router/utils/app-paths'\nimport type { SizeLimit } from '../../../../types'\nimport { internal_getCurrentFunctionWaitUntil } from '../../../../server/web/internal-edge-wait-until'\nimport type { PAGE_TYPES } from '../../../../lib/page-types'\nimport type { NextRequestHint } from '../../../../server/web/adapter'\nimport type { DeepReadonly } from '../../../../shared/lib/deep-readonly'\n\nexport function getRender({\n  dev,\n  page,\n  appMod,\n  pageMod,\n  errorMod,\n  error500Mod,\n  pagesType,\n  Document,\n  buildManifest,\n  prerenderManifest,\n  reactLoadableManifest,\n  interceptionRouteRewrites,\n  renderToHTML,\n  clientReferenceManifest,\n  subresourceIntegrityManifest,\n  serverActionsManifest,\n  serverActions,\n  config,\n  buildId,\n  nextFontManifest,\n  incrementalCacheHandler,\n}: {\n  pagesType: PAGE_TYPES\n  dev: boolean\n  page: string\n  appMod: any\n  pageMod: any\n  errorMod: any\n  error500Mod: any\n  renderToHTML?: any\n  Document: DocumentType\n  buildManifest: BuildManifest\n  prerenderManifest: DeepReadonly<PrerenderManifest>\n  reactLoadableManifest: ReactLoadableManifest\n  subresourceIntegrityManifest?: Record<string, string>\n  interceptionRouteRewrites?: ManifestRewriteRoute[]\n  clientReferenceManifest?: ClientReferenceManifest\n  serverActionsManifest?: any\n  serverActions?: {\n    bodySizeLimit?: SizeLimit\n    allowedOrigins?: string[]\n  }\n  config: NextConfigComplete\n  buildId: string\n  nextFontManifest: NextFontManifest\n  incrementalCacheHandler?: any\n}) {\n  const isAppPath = pagesType === 'app'\n  const baseLoadComponentResult = {\n    dev,\n    buildManifest,\n    reactLoadableManifest,\n    subresourceIntegrityManifest,\n    Document,\n    App: appMod?.default as AppType,\n    clientReferenceManifest,\n  }\n\n  const server = new WebServer({\n    dev,\n    conf: config,\n    minimalMode: true,\n    webServerConfig: {\n      page,\n      pathname: isAppPath ? normalizeAppPath(page) : page,\n      pagesType,\n      prerenderManifest,\n      interceptionRouteRewrites,\n      extendRenderOpts: {\n        buildId,\n        runtime: SERVER_RUNTIME.experimentalEdge,\n        supportsDynamicHTML: true,\n        disableOptimizedLoading: true,\n        serverActionsManifest,\n        serverActions,\n        nextFontManifest,\n      },\n      renderToHTML,\n      incrementalCacheHandler,\n      loadComponent: async (inputPage) => {\n        if (inputPage === page) {\n          return {\n            ...baseLoadComponentResult,\n            Component: pageMod.default,\n            pageConfig: pageMod.config || {},\n            getStaticProps: pageMod.getStaticProps,\n            getServerSideProps: pageMod.getServerSideProps,\n            getStaticPaths: pageMod.getStaticPaths,\n            ComponentMod: pageMod,\n            isAppPath: !!pageMod.__next_app__,\n            page: inputPage,\n            routeModule: pageMod.routeModule,\n          }\n        }\n\n        // If there is a custom 500 page, we need to handle it separately.\n        if (inputPage === '/500' && error500Mod) {\n          return {\n            ...baseLoadComponentResult,\n            Component: error500Mod.default,\n            pageConfig: error500Mod.config || {},\n            getStaticProps: error500Mod.getStaticProps,\n            getServerSideProps: error500Mod.getServerSideProps,\n            getStaticPaths: error500Mod.getStaticPaths,\n            ComponentMod: error500Mod,\n            page: inputPage,\n            routeModule: error500Mod.routeModule,\n          }\n        }\n\n        if (inputPage === '/_error') {\n          return {\n            ...baseLoadComponentResult,\n            Component: errorMod.default,\n            pageConfig: errorMod.config || {},\n            getStaticProps: errorMod.getStaticProps,\n            getServerSideProps: errorMod.getServerSideProps,\n            getStaticPaths: errorMod.getStaticPaths,\n            ComponentMod: errorMod,\n            page: inputPage,\n            routeModule: errorMod.routeModule,\n          }\n        }\n\n        return null\n      },\n    },\n  })\n\n  const handler = server.getRequestHandler()\n\n  return async function render(\n    request: NextRequestHint,\n    event?: NextFetchEvent\n  ) {\n    const extendedReq = new WebNextRequest(request)\n    const extendedRes = new WebNextResponse(\n      undefined,\n      // tracking onClose adds overhead, so only do it if `experimental.after` is on.\n      !!process.env.__NEXT_AFTER\n    )\n\n    handler(extendedReq, extendedRes)\n    const result = await extendedRes.toResponse()\n\n    if (event?.waitUntil) {\n      // TODO(after):\n      // remove `internal_runWithWaitUntil` and the `internal-edge-wait-until` module\n      // when consumers switch to `unstable_after`.\n      const waitUntilPromise = internal_getCurrentFunctionWaitUntil()\n      if (waitUntilPromise) {\n        event.waitUntil(waitUntilPromise)\n      }\n    }\n\n    return result\n  }\n}\n"],"names":["getRender","dev","page","appMod","pageMod","errorMod","error500Mod","pagesType","Document","buildManifest","prerenderManifest","reactLoadableManifest","interceptionRouteRewrites","renderToHTML","clientReferenceManifest","subresourceIntegrityManifest","serverActionsManifest","serverActions","config","buildId","nextFontManifest","incrementalCacheHandler","isAppPath","baseLoadComponentResult","App","default","server","WebServer","conf","minimalMode","webServerConfig","pathname","normalizeAppPath","extendRenderOpts","runtime","SERVER_RUNTIME","experimentalEdge","supportsDynamicHTML","disableOptimizedLoading","loadComponent","inputPage","Component","pageConfig","getStaticProps","getServerSideProps","getStaticPaths","ComponentMod","__next_app__","routeModule","handler","getRequestHandler","render","request","event","extendedReq","WebNextRequest","extendedRes","WebNextResponse","undefined","process","env","__NEXT_AFTER","result","toResponse","waitUntil","waitUntilPromise","internal_getCurrentFunctionWaitUntil"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}