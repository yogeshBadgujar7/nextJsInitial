/// <reference path="../../../../types/compiled.d.ts" />
import type { Rewrite, CustomRoutes } from '../../../lib/load-custom-routes';
import { webpack } from 'next/dist/compiled/webpack/webpack';
export type ClientBuildManifest = {
    [key: string]: string[];
};
export declare const srcEmptySsgManifest = "self.__SSG_MANIFEST=new Set;self.__SSG_MANIFEST_CB&&self.__SSG_MANIFEST_CB()";
export declare function normalizeRewritesForBuildManifest(rewrites: CustomRoutes['rewrites']): CustomRoutes['rewrites'];
export declare function getEntrypointFiles(entrypoint: any): string[];
export declare const processRoute: (r: Rewrite) => {
    source: string;
    destination: string;
    basePath?: false | undefined;
    locale?: false | undefined;
    has?: import("../../../lib/load-custom-routes").RouteHas[] | undefined;
    missing?: import("../../../lib/load-custom-routes").RouteHas[] | undefined;
    internal?: boolean | undefined;
};
export default class BuildManifestPlugin {
    private buildId;
    private rewrites;
    private isDevFallback;
    private appDirEnabled;
    constructor(options: {
        buildId: string;
        rewrites: CustomRoutes['rewrites'];
        isDevFallback?: boolean;
        appDirEnabled: boolean;
    });
    createAssets(compiler: any, compilation: any, assets: any): any;
    apply(compiler: webpack.Compiler): void;
}
