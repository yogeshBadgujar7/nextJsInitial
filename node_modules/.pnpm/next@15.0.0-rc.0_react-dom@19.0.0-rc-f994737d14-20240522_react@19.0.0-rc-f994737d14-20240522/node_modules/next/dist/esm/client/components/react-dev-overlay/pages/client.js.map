{"version":3,"sources":["../../../../../src/client/components/react-dev-overlay/pages/client.ts"],"sourcesContent":["import * as Bus from './bus'\nimport { parseStack } from '../internal/helpers/parseStack'\nimport { parseComponentStack } from '../internal/helpers/parse-component-stack'\nimport {\n  getReactHydrationDiffSegments,\n  hydrationErrorState,\n  patchConsoleError,\n} from '../internal/helpers/hydration-error-info'\nimport {\n  ACTION_BEFORE_REFRESH,\n  ACTION_BUILD_ERROR,\n  ACTION_BUILD_OK,\n  ACTION_REFRESH,\n  ACTION_UNHANDLED_ERROR,\n  ACTION_UNHANDLED_REJECTION,\n  ACTION_VERSION_INFO,\n} from '../shared'\nimport type { VersionInfo } from '../../../../server/dev/parse-version-info'\nimport {\n  getDefaultHydrationErrorMessage,\n  isHydrationError,\n} from '../../is-hydration-error'\n\n// Patch console.error to collect information about hydration errors\npatchConsoleError()\n\nlet isRegistered = false\nlet stackTraceLimit: number | undefined = undefined\n\nfunction handleError(error: unknown) {\n  if (!error || !(error instanceof Error) || typeof error.stack !== 'string') {\n    // A non-error was thrown, we don't have anything to show. :-(\n    return\n  }\n\n  if (\n    isHydrationError(error) &&\n    !error.message.includes(\n      'https://nextjs.org/docs/messages/react-hydration-error'\n    )\n  ) {\n    const reactHydrationDiffSegments = getReactHydrationDiffSegments(\n      error.message\n    )\n    let parsedHydrationErrorState: typeof hydrationErrorState = {}\n    if (reactHydrationDiffSegments) {\n      parsedHydrationErrorState = {\n        ...(error as any).details,\n        warning: hydrationErrorState.warning || [\n          getDefaultHydrationErrorMessage(),\n        ],\n        notes: reactHydrationDiffSegments[0],\n        reactOutputComponentDiff: reactHydrationDiffSegments[1],\n      }\n    } else {\n      // If there's any extra information in the error message to display,\n      // append it to the error message details property\n      if (hydrationErrorState.warning) {\n        // The patched console.error found hydration errors logged by React\n        // Append the logged warning to the error message\n        parsedHydrationErrorState = {\n          ...(error as any).details,\n          // It contains the warning, component stack, server and client tag names\n          ...hydrationErrorState,\n        }\n      }\n      error.message += `\\nSee more info here: https://nextjs.org/docs/messages/react-hydration-error`\n    }\n    ;(error as any).details = parsedHydrationErrorState\n  }\n\n  const e = error\n  const componentStackTrace =\n    (error as any)._componentStack || hydrationErrorState.componentStack\n  const componentStackFrames =\n    typeof componentStackTrace === 'string'\n      ? parseComponentStack(componentStackTrace)\n      : undefined\n\n  // Skip ModuleBuildError and ModuleNotFoundError, as it will be sent through onBuildError callback.\n  // This is to avoid same error as different type showing up on client to cause flashing.\n  if (e.name !== 'ModuleBuildError' && e.name !== 'ModuleNotFoundError') {\n    Bus.emit({\n      type: ACTION_UNHANDLED_ERROR,\n      reason: error,\n      frames: parseStack(e.stack!),\n      componentStackFrames,\n    })\n  }\n}\n\nlet origConsoleError = console.error\nfunction nextJsHandleConsoleError(...args: any[]) {\n  // See https://github.com/facebook/react/blob/d50323eb845c5fde0d720cae888bf35dedd05506/packages/react-reconciler/src/ReactFiberErrorLogger.js#L78\n  const error = process.env.NODE_ENV !== 'production' ? args[1] : args[0]\n  handleError(error)\n  origConsoleError.apply(window.console, args)\n}\n\nfunction onUnhandledError(event: ErrorEvent) {\n  const error = event?.error\n  handleError(error)\n}\n\nfunction onUnhandledRejection(ev: PromiseRejectionEvent) {\n  const reason = ev?.reason\n  if (\n    !reason ||\n    !(reason instanceof Error) ||\n    typeof reason.stack !== 'string'\n  ) {\n    // A non-error was thrown, we don't have anything to show. :-(\n    return\n  }\n\n  const e = reason\n  Bus.emit({\n    type: ACTION_UNHANDLED_REJECTION,\n    reason: reason,\n    frames: parseStack(e.stack!),\n  })\n}\n\nexport function register() {\n  if (isRegistered) {\n    return\n  }\n  isRegistered = true\n\n  try {\n    const limit = Error.stackTraceLimit\n    Error.stackTraceLimit = 50\n    stackTraceLimit = limit\n  } catch {}\n\n  window.addEventListener('error', onUnhandledError)\n  window.addEventListener('unhandledrejection', onUnhandledRejection)\n  window.console.error = nextJsHandleConsoleError\n}\n\nexport function unregister() {\n  if (!isRegistered) {\n    return\n  }\n  isRegistered = false\n\n  if (stackTraceLimit !== undefined) {\n    try {\n      Error.stackTraceLimit = stackTraceLimit\n    } catch {}\n    stackTraceLimit = undefined\n  }\n\n  window.removeEventListener('error', onUnhandledError)\n  window.removeEventListener('unhandledrejection', onUnhandledRejection)\n  window.console.error = origConsoleError\n}\n\nexport function onBuildOk() {\n  Bus.emit({ type: ACTION_BUILD_OK })\n}\n\nexport function onBuildError(message: string) {\n  Bus.emit({ type: ACTION_BUILD_ERROR, message })\n}\n\nexport function onRefresh() {\n  Bus.emit({ type: ACTION_REFRESH })\n}\n\nexport function onBeforeRefresh() {\n  Bus.emit({ type: ACTION_BEFORE_REFRESH })\n}\n\nexport function onVersionInfo(versionInfo: VersionInfo) {\n  Bus.emit({ type: ACTION_VERSION_INFO, versionInfo })\n}\n\nexport { getErrorByType } from '../internal/helpers/getErrorByType'\nexport { getServerError } from '../internal/helpers/nodeStackFrames'\nexport { default as ReactDevOverlay } from './ReactDevOverlay'\n"],"names":["Bus","parseStack","parseComponentStack","getReactHydrationDiffSegments","hydrationErrorState","patchConsoleError","ACTION_BEFORE_REFRESH","ACTION_BUILD_ERROR","ACTION_BUILD_OK","ACTION_REFRESH","ACTION_UNHANDLED_ERROR","ACTION_UNHANDLED_REJECTION","ACTION_VERSION_INFO","getDefaultHydrationErrorMessage","isHydrationError","isRegistered","stackTraceLimit","undefined","handleError","error","Error","stack","message","includes","reactHydrationDiffSegments","parsedHydrationErrorState","details","warning","notes","reactOutputComponentDiff","e","componentStackTrace","_componentStack","componentStack","componentStackFrames","name","emit","type","reason","frames","origConsoleError","console","nextJsHandleConsoleError","args","process","env","NODE_ENV","apply","window","onUnhandledError","event","onUnhandledRejection","ev","register","limit","addEventListener","unregister","removeEventListener","onBuildOk","onBuildError","onRefresh","onBeforeRefresh","onVersionInfo","versionInfo","getErrorByType","getServerError","default","ReactDevOverlay"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}