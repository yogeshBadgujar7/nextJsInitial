{"version":3,"sources":["../../src/export/index.ts"],"sourcesContent":["import type {\n  ExportAppResult,\n  ExportAppOptions,\n  ExportWorker,\n  WorkerRenderOptsPartial,\n} from './types'\nimport type { PrerenderManifest } from '../build'\nimport type { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\n\nimport { bold, yellow } from '../lib/picocolors'\nimport findUp from 'next/dist/compiled/find-up'\nimport { existsSync, promises as fs } from 'fs'\n\nimport '../server/require-hook'\n\nimport { Worker } from '../lib/worker'\nimport { dirname, join, resolve, sep } from 'path'\nimport { formatAmpMessages } from '../build/output/index'\nimport type { AmpPageStatus } from '../build/output/index'\nimport * as Log from '../build/output/log'\nimport { RSC_SUFFIX, SSG_FALLBACK_EXPORT_ERROR } from '../lib/constants'\nimport { recursiveCopy } from '../lib/recursive-copy'\nimport {\n  BUILD_ID_FILE,\n  CLIENT_PUBLIC_FILES_PATH,\n  CLIENT_STATIC_FILES_PATH,\n  EXPORT_DETAIL,\n  EXPORT_MARKER,\n  NEXT_FONT_MANIFEST,\n  MIDDLEWARE_MANIFEST,\n  PAGES_MANIFEST,\n  PHASE_EXPORT,\n  PRERENDER_MANIFEST,\n  SERVER_DIRECTORY,\n  SERVER_REFERENCE_MANIFEST,\n  APP_PATH_ROUTES_MANIFEST,\n} from '../shared/lib/constants'\nimport loadConfig from '../server/config'\nimport type { ExportPathMap, NextConfigComplete } from '../server/config-shared'\nimport { eventCliSession } from '../telemetry/events'\nimport { hasNextSupport } from '../telemetry/ci-info'\nimport { Telemetry } from '../telemetry/storage'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport { denormalizePagePath } from '../shared/lib/page-path/denormalize-page-path'\nimport { loadEnvConfig } from '@next/env'\nimport { isAPIRoute } from '../lib/is-api-route'\nimport { getPagePath } from '../server/require'\nimport type { Span } from '../trace'\nimport type { FontConfig } from '../server/font-utils'\nimport type { MiddlewareManifest } from '../build/webpack/plugins/middleware-plugin'\nimport { isAppRouteRoute } from '../lib/is-app-route-route'\nimport { isAppPageRoute } from '../lib/is-app-page-route'\nimport isError from '../lib/is-error'\nimport { needsExperimentalReact } from '../lib/needs-experimental-react'\nimport { formatManifest } from '../build/manifests/formatter/format-manifest'\nimport { validateRevalidate } from '../server/lib/patch-fetch'\nimport { TurborepoAccessTraceResult } from '../build/turborepo-access-trace'\nimport { createProgress } from '../build/progress'\nimport type { DeepReadonly } from '../shared/lib/deep-readonly'\nimport { checkIsAppPPREnabled } from '../server/lib/experimental/ppr'\n\nexport class ExportError extends Error {\n  code = 'NEXT_EXPORT_ERROR'\n}\n\ntype ExportWorkers = {\n  pages: ExportWorker\n  app?: ExportWorker\n  end: () => Promise<void>\n}\n\nfunction setupWorkers(\n  options: ExportAppOptions,\n  nextConfig: NextConfigComplete\n): ExportWorkers {\n  if (options.exportPageWorker) {\n    return {\n      pages: options.exportPageWorker,\n      app: options.exportAppPageWorker,\n      end: options.endWorker || (() => Promise.resolve()),\n    }\n  }\n\n  const threads = options.threads || nextConfig.experimental.cpus\n  if (!options.silent && !options.buildExport) {\n    Log.info(`Launching ${threads} workers`)\n  }\n\n  const timeout = nextConfig?.staticPageGenerationTimeout || 0\n\n  let infoPrinted = false\n\n  const worker = new Worker(require.resolve('./worker'), {\n    timeout: timeout * 1000,\n    onRestart: (_method, [{ path }], attempts) => {\n      if (attempts >= 3) {\n        throw new ExportError(\n          `Static page generation for ${path} is still timing out after 3 attempts. See more info here https://nextjs.org/docs/messages/static-page-generation-timeout`\n        )\n      }\n      Log.warn(\n        `Restarted static page generation for ${path} because it took more than ${timeout} seconds`\n      )\n      if (!infoPrinted) {\n        Log.warn(\n          'See more info here https://nextjs.org/docs/messages/static-page-generation-timeout'\n        )\n        infoPrinted = true\n      }\n    },\n    maxRetries: 0,\n    numWorkers: threads,\n    enableWorkerThreads: nextConfig.experimental.workerThreads,\n    exposedMethods: ['default'],\n  }) as Worker & typeof import('./worker')\n\n  return {\n    pages: worker.default,\n    end: async () => {\n      await worker.end()\n    },\n  }\n}\n\nexport async function exportAppImpl(\n  dir: string,\n  options: Readonly<ExportAppOptions>,\n  span: Span\n): Promise<ExportAppResult | null> {\n  dir = resolve(dir)\n\n  // attempt to load global env values so they are available in next.config.js\n  span.traceChild('load-dotenv').traceFn(() => loadEnvConfig(dir, false, Log))\n\n  const { enabledDirectories } = options\n\n  const nextConfig =\n    options.nextConfig ||\n    (await span\n      .traceChild('load-next-config')\n      .traceAsyncFn(() => loadConfig(PHASE_EXPORT, dir)))\n\n  const distDir = join(dir, nextConfig.distDir)\n  const telemetry = options.buildExport ? null : new Telemetry({ distDir })\n\n  if (telemetry) {\n    telemetry.record(\n      eventCliSession(distDir, nextConfig, {\n        webpackVersion: null,\n        cliCommand: 'export',\n        isSrcDir: null,\n        hasNowJson: !!(await findUp('now.json', { cwd: dir })),\n        isCustomServer: null,\n        turboFlag: false,\n        pagesDir: null,\n        appDir: null,\n      })\n    )\n  }\n\n  const subFolders = nextConfig.trailingSlash && !options.buildExport\n\n  if (!options.silent && !options.buildExport) {\n    Log.info(`using build directory: ${distDir}`)\n  }\n\n  const buildIdFile = join(distDir, BUILD_ID_FILE)\n\n  if (!existsSync(buildIdFile)) {\n    throw new ExportError(\n      `Could not find a production build in the '${distDir}' directory. Try building your app with 'next build' before starting the static export. https://nextjs.org/docs/messages/next-export-no-build-id`\n    )\n  }\n\n  const customRoutes = ['rewrites', 'redirects', 'headers'].filter(\n    (config) => typeof nextConfig[config] === 'function'\n  )\n\n  if (!hasNextSupport && !options.buildExport && customRoutes.length > 0) {\n    Log.warn(\n      `rewrites, redirects, and headers are not applied when exporting your application, detected (${customRoutes.join(\n        ', '\n      )}). See more info here: https://nextjs.org/docs/messages/export-no-custom-routes`\n    )\n  }\n\n  const buildId = await fs.readFile(buildIdFile, 'utf8')\n\n  const pagesManifest =\n    !options.pages &&\n    (require(join(distDir, SERVER_DIRECTORY, PAGES_MANIFEST)) as PagesManifest)\n\n  let prerenderManifest: DeepReadonly<PrerenderManifest> | undefined\n  try {\n    prerenderManifest = require(join(distDir, PRERENDER_MANIFEST))\n  } catch {}\n\n  let appRoutePathManifest: Record<string, string> | undefined\n  try {\n    appRoutePathManifest = require(join(distDir, APP_PATH_ROUTES_MANIFEST))\n  } catch (err) {\n    if (\n      isError(err) &&\n      (err.code === 'ENOENT' || err.code === 'MODULE_NOT_FOUND')\n    ) {\n      // the manifest doesn't exist which will happen when using\n      // \"pages\" dir instead of \"app\" dir.\n      appRoutePathManifest = undefined\n    } else {\n      // the manifest is malformed (invalid json)\n      throw err\n    }\n  }\n\n  const excludedPrerenderRoutes = new Set<string>()\n  const pages = options.pages || Object.keys(pagesManifest)\n  const defaultPathMap: ExportPathMap = {}\n\n  let hasApiRoutes = false\n  for (const page of pages) {\n    // _document and _app are not real pages\n    // _error is exported as 404.html later on\n    // API Routes are Node.js functions\n\n    if (isAPIRoute(page)) {\n      hasApiRoutes = true\n      continue\n    }\n\n    if (page === '/_document' || page === '/_app' || page === '/_error') {\n      continue\n    }\n\n    // iSSG pages that are dynamic should not export templated version by\n    // default. In most cases, this would never work. There is no server that\n    // could run `getStaticProps`. If users make their page work lazily, they\n    // can manually add it to the `exportPathMap`.\n    if (prerenderManifest?.dynamicRoutes[page]) {\n      excludedPrerenderRoutes.add(page)\n      continue\n    }\n\n    defaultPathMap[page] = { page }\n  }\n\n  const mapAppRouteToPage = new Map<string, string>()\n  if (!options.buildExport && appRoutePathManifest) {\n    for (const [pageName, routePath] of Object.entries(appRoutePathManifest)) {\n      mapAppRouteToPage.set(routePath, pageName)\n      if (\n        isAppPageRoute(pageName) &&\n        !prerenderManifest?.routes[routePath] &&\n        !prerenderManifest?.dynamicRoutes[routePath]\n      ) {\n        defaultPathMap[routePath] = {\n          page: pageName,\n          _isAppDir: true,\n        }\n      }\n    }\n  }\n\n  // Initialize the output directory\n  const outDir = options.outdir\n\n  if (outDir === join(dir, 'public')) {\n    throw new ExportError(\n      `The 'public' directory is reserved in Next.js and can not be used as the export out directory. https://nextjs.org/docs/messages/can-not-output-to-public`\n    )\n  }\n\n  if (outDir === join(dir, 'static')) {\n    throw new ExportError(\n      `The 'static' directory is reserved in Next.js and can not be used as the export out directory. https://nextjs.org/docs/messages/can-not-output-to-static`\n    )\n  }\n\n  await fs.rm(outDir, { recursive: true, force: true })\n  await fs.mkdir(join(outDir, '_next', buildId), { recursive: true })\n\n  await fs.writeFile(\n    join(distDir, EXPORT_DETAIL),\n    formatManifest({\n      version: 1,\n      outDirectory: outDir,\n      success: false,\n    }),\n    'utf8'\n  )\n\n  // Copy static directory\n  if (!options.buildExport && existsSync(join(dir, 'static'))) {\n    if (!options.silent) {\n      Log.info('Copying \"static\" directory')\n    }\n    await span\n      .traceChild('copy-static-directory')\n      .traceAsyncFn(() =>\n        recursiveCopy(join(dir, 'static'), join(outDir, 'static'))\n      )\n  }\n\n  // Copy .next/static directory\n  if (\n    !options.buildExport &&\n    existsSync(join(distDir, CLIENT_STATIC_FILES_PATH))\n  ) {\n    if (!options.silent) {\n      Log.info('Copying \"static build\" directory')\n    }\n    await span\n      .traceChild('copy-next-static-directory')\n      .traceAsyncFn(() =>\n        recursiveCopy(\n          join(distDir, CLIENT_STATIC_FILES_PATH),\n          join(outDir, '_next', CLIENT_STATIC_FILES_PATH)\n        )\n      )\n  }\n\n  // Get the exportPathMap from the config file\n  if (typeof nextConfig.exportPathMap !== 'function') {\n    nextConfig.exportPathMap = async (defaultMap) => {\n      return defaultMap\n    }\n  }\n\n  const {\n    i18n,\n    images: { loader = 'default', unoptimized },\n  } = nextConfig\n\n  if (i18n && !options.buildExport) {\n    throw new ExportError(\n      `i18n support is not compatible with next export. See here for more info on deploying: https://nextjs.org/docs/messages/export-no-custom-routes`\n    )\n  }\n\n  if (!options.buildExport) {\n    const { isNextImageImported } = await span\n      .traceChild('is-next-image-imported')\n      .traceAsyncFn(() =>\n        fs\n          .readFile(join(distDir, EXPORT_MARKER), 'utf8')\n          .then((text) => JSON.parse(text))\n          .catch(() => ({}))\n      )\n\n    if (\n      isNextImageImported &&\n      loader === 'default' &&\n      !unoptimized &&\n      !hasNextSupport\n    ) {\n      throw new ExportError(\n        `Image Optimization using the default loader is not compatible with export.\n  Possible solutions:\n    - Use \\`next start\\` to run a server, which includes the Image Optimization API.\n    - Configure \\`images.unoptimized = true\\` in \\`next.config.js\\` to disable the Image Optimization API.\n  Read more: https://nextjs.org/docs/messages/export-image-api`\n      )\n    }\n  }\n\n  let serverActionsManifest\n  if (enabledDirectories.app) {\n    serverActionsManifest = require(\n      join(distDir, SERVER_DIRECTORY, SERVER_REFERENCE_MANIFEST + '.json')\n    )\n    if (nextConfig.output === 'export') {\n      if (\n        Object.keys(serverActionsManifest.node).length > 0 ||\n        Object.keys(serverActionsManifest.edge).length > 0\n      ) {\n        throw new ExportError(\n          `Server Actions are not supported with static export.`\n        )\n      }\n    }\n  }\n\n  // Start the rendering process\n  const renderOpts: WorkerRenderOptsPartial = {\n    previewProps: prerenderManifest?.preview,\n    buildId,\n    nextExport: true,\n    assetPrefix: nextConfig.assetPrefix.replace(/\\/$/, ''),\n    distDir,\n    dev: false,\n    basePath: nextConfig.basePath,\n    trailingSlash: nextConfig.trailingSlash,\n    canonicalBase: nextConfig.amp?.canonicalBase || '',\n    ampSkipValidation: nextConfig.experimental.amp?.skipValidation || false,\n    ampOptimizerConfig: nextConfig.experimental.amp?.optimizer || undefined,\n    locales: i18n?.locales,\n    locale: i18n?.defaultLocale,\n    defaultLocale: i18n?.defaultLocale,\n    domainLocales: i18n?.domains,\n    disableOptimizedLoading: nextConfig.experimental.disableOptimizedLoading,\n    // Exported pages do not currently support dynamic HTML.\n    supportsDynamicHTML: false,\n    crossOrigin: nextConfig.crossOrigin,\n    optimizeCss: nextConfig.experimental.optimizeCss,\n    nextConfigOutput: nextConfig.output,\n    nextScriptWorkers: nextConfig.experimental.nextScriptWorkers,\n    optimizeFonts: nextConfig.optimizeFonts as FontConfig,\n    largePageDataBytes: nextConfig.experimental.largePageDataBytes,\n    serverActions: nextConfig.experimental.serverActions,\n    serverComponents: enabledDirectories.app,\n    nextFontManifest: require(\n      join(distDir, 'server', `${NEXT_FONT_MANIFEST}.json`)\n    ),\n    images: nextConfig.images,\n    ...(enabledDirectories.app\n      ? {\n          serverActionsManifest,\n        }\n      : {}),\n    strictNextHead: nextConfig.experimental.strictNextHead ?? true,\n    deploymentId: nextConfig.deploymentId,\n    experimental: {\n      isAppPPREnabled: checkIsAppPPREnabled(nextConfig.experimental.ppr),\n      clientTraceMetadata: nextConfig.experimental.clientTraceMetadata,\n      swrDelta: nextConfig.swrDelta,\n      after: nextConfig.experimental.after ?? false,\n    },\n  }\n\n  const { serverRuntimeConfig, publicRuntimeConfig } = nextConfig\n\n  if (Object.keys(publicRuntimeConfig).length > 0) {\n    renderOpts.runtimeConfig = publicRuntimeConfig\n  }\n\n  // We need this for server rendering the Link component.\n  ;(globalThis as any).__NEXT_DATA__ = {\n    nextExport: true,\n  }\n\n  const exportPathMap = await span\n    .traceChild('run-export-path-map')\n    .traceAsyncFn(async () => {\n      const exportMap = await nextConfig.exportPathMap(defaultPathMap, {\n        dev: false,\n        dir,\n        outDir,\n        distDir,\n        buildId,\n      })\n      return exportMap\n    })\n\n  // only add missing 404 page when `buildExport` is false\n  if (!options.buildExport) {\n    // only add missing /404 if not specified in `exportPathMap`\n    if (!exportPathMap['/404']) {\n      exportPathMap['/404'] = { page: '/_error' }\n    }\n\n    /**\n     * exports 404.html for backwards compat\n     * E.g. GitHub Pages, GitLab Pages, Cloudflare Pages, Netlify\n     */\n    if (!exportPathMap['/404.html']) {\n      // alias /404.html to /404 to be compatible with custom 404 / _error page\n      exportPathMap['/404.html'] = exportPathMap['/404']\n    }\n  }\n\n  // make sure to prevent duplicates\n  const exportPaths = [\n    ...new Set(\n      Object.keys(exportPathMap).map((path) =>\n        denormalizePagePath(normalizePagePath(path))\n      )\n    ),\n  ]\n\n  const filteredPaths = exportPaths.filter(\n    (route) =>\n      exportPathMap[route]._isAppDir ||\n      // Remove API routes\n      !isAPIRoute(exportPathMap[route].page)\n  )\n\n  if (filteredPaths.length !== exportPaths.length) {\n    hasApiRoutes = true\n  }\n\n  if (filteredPaths.length === 0) {\n    return null\n  }\n\n  if (prerenderManifest && !options.buildExport) {\n    const fallbackEnabledPages = new Set()\n\n    for (const path of Object.keys(exportPathMap)) {\n      const page = exportPathMap[path].page\n      const prerenderInfo = prerenderManifest.dynamicRoutes[page]\n\n      if (prerenderInfo && prerenderInfo.fallback !== false) {\n        fallbackEnabledPages.add(page)\n      }\n    }\n\n    if (fallbackEnabledPages.size > 0) {\n      throw new ExportError(\n        `Found pages with \\`fallback\\` enabled:\\n${[\n          ...fallbackEnabledPages,\n        ].join('\\n')}\\n${SSG_FALLBACK_EXPORT_ERROR}\\n`\n      )\n    }\n  }\n  let hasMiddleware = false\n\n  if (!options.buildExport) {\n    try {\n      const middlewareManifest = require(\n        join(distDir, SERVER_DIRECTORY, MIDDLEWARE_MANIFEST)\n      ) as MiddlewareManifest\n\n      hasMiddleware = Object.keys(middlewareManifest.middleware).length > 0\n    } catch {}\n\n    // Warn if the user defines a path for an API page\n    if (hasApiRoutes || hasMiddleware) {\n      if (nextConfig.output === 'export') {\n        Log.warn(\n          yellow(\n            `Statically exporting a Next.js application via \\`next export\\` disables API routes and middleware.`\n          ) +\n            `\\n` +\n            yellow(\n              `This command is meant for static-only hosts, and is` +\n                ' ' +\n                bold(`not necessary to make your application static.`)\n            ) +\n            `\\n` +\n            yellow(\n              `Pages in your application without server-side data dependencies will be automatically statically exported by \\`next build\\`, including pages powered by \\`getStaticProps\\`.`\n            ) +\n            `\\n` +\n            yellow(\n              `Learn more: https://nextjs.org/docs/messages/api-routes-static-export`\n            )\n        )\n      }\n    }\n  }\n\n  const progress =\n    !options.silent &&\n    createProgress(filteredPaths.length, options.statusMessage || 'Exporting')\n  const pagesDataDir = options.buildExport\n    ? outDir\n    : join(outDir, '_next/data', buildId)\n\n  const ampValidations: AmpPageStatus = {}\n\n  const publicDir = join(dir, CLIENT_PUBLIC_FILES_PATH)\n  // Copy public directory\n  if (!options.buildExport && existsSync(publicDir)) {\n    if (!options.silent) {\n      Log.info('Copying \"public\" directory')\n    }\n    await span.traceChild('copy-public-directory').traceAsyncFn(() =>\n      recursiveCopy(publicDir, outDir, {\n        filter(path) {\n          // Exclude paths used by pages\n          return !exportPathMap[path]\n        },\n      })\n    )\n  }\n\n  const workers = setupWorkers(options, nextConfig)\n\n  const results = await Promise.all(\n    filteredPaths.map(async (path) => {\n      const pathMap = exportPathMap[path]\n      const exportPage = workers[pathMap._isAppDir ? 'app' : 'pages']\n      if (!exportPage) {\n        throw new Error(\n          'Invariant: Undefined export worker for app dir, this is a bug in Next.js.'\n        )\n      }\n\n      const pageExportSpan = span.traceChild('export-page')\n      pageExportSpan.setAttribute('path', path)\n\n      const result = await pageExportSpan.traceAsyncFn(async () => {\n        return await exportPage({\n          dir,\n          path,\n          pathMap,\n          distDir,\n          outDir,\n          pagesDataDir,\n          renderOpts,\n          ampValidatorPath: nextConfig.experimental.amp?.validator || undefined,\n          trailingSlash: nextConfig.trailingSlash,\n          serverRuntimeConfig,\n          subFolders,\n          buildExport: options.buildExport,\n          optimizeFonts: nextConfig.optimizeFonts as FontConfig,\n          optimizeCss: nextConfig.experimental.optimizeCss,\n          disableOptimizedLoading:\n            nextConfig.experimental.disableOptimizedLoading,\n          parentSpanId: pageExportSpan.getId(),\n          httpAgentOptions: nextConfig.httpAgentOptions,\n          debugOutput: options.debugOutput,\n          cacheMaxMemorySize: nextConfig.cacheMaxMemorySize,\n          fetchCache: true,\n          fetchCacheKeyPrefix: nextConfig.experimental.fetchCacheKeyPrefix,\n          cacheHandler: nextConfig.cacheHandler,\n          enableExperimentalReact: needsExperimentalReact(nextConfig),\n          enabledDirectories,\n        })\n      })\n\n      if (nextConfig.experimental.prerenderEarlyExit) {\n        if (result && 'error' in result) {\n          throw new Error(\n            `Export encountered an error on ${path}, exiting due to prerenderEarlyExit: true being set`\n          )\n        }\n      }\n\n      if (progress) progress()\n\n      return { result, path }\n    })\n  )\n\n  const errorPaths: string[] = []\n  let renderError = false\n  let hadValidationError = false\n\n  const collector: ExportAppResult = {\n    byPath: new Map(),\n    byPage: new Map(),\n    ssgNotFoundPaths: new Set(),\n    turborepoAccessTraceResults: new Map(),\n  }\n\n  for (const { result, path } of results) {\n    if (!result) continue\n\n    const { page } = exportPathMap[path]\n\n    if (result.turborepoAccessTraceResult) {\n      collector.turborepoAccessTraceResults?.set(\n        path,\n        TurborepoAccessTraceResult.fromSerialized(\n          result.turborepoAccessTraceResult\n        )\n      )\n    }\n\n    // Capture any render errors.\n    if ('error' in result) {\n      renderError = true\n      errorPaths.push(page !== path ? `${page}: ${path}` : path)\n      continue\n    }\n\n    // Capture any amp validations.\n    if (result.ampValidations) {\n      for (const validation of result.ampValidations) {\n        ampValidations[validation.page] = validation.result\n        hadValidationError ||= validation.result.errors.length > 0\n      }\n    }\n\n    if (options.buildExport) {\n      // Update path info by path.\n      const info = collector.byPath.get(path) ?? {}\n      if (typeof result.revalidate !== 'undefined') {\n        info.revalidate = validateRevalidate(result.revalidate, path)\n      }\n      if (typeof result.metadata !== 'undefined') {\n        info.metadata = result.metadata\n      }\n\n      if (typeof result.hasEmptyPrelude !== 'undefined') {\n        info.hasEmptyPrelude = result.hasEmptyPrelude\n      }\n\n      if (typeof result.hasPostponed !== 'undefined') {\n        info.hasPostponed = result.hasPostponed\n      }\n\n      collector.byPath.set(path, info)\n\n      // Update not found.\n      if (result.ssgNotFound === true) {\n        collector.ssgNotFoundPaths.add(path)\n      }\n\n      // Update durations.\n      const durations = collector.byPage.get(page) ?? {\n        durationsByPath: new Map<string, number>(),\n      }\n      durations.durationsByPath.set(path, result.duration)\n      collector.byPage.set(page, durations)\n    }\n  }\n\n  const endWorkerPromise = workers.end()\n\n  // Export mode provide static outputs that are not compatible with PPR mode.\n  if (!options.buildExport && nextConfig.experimental.ppr) {\n    // TODO: add message\n    throw new Error('Invariant: PPR cannot be enabled in export mode')\n  }\n\n  // copy prerendered routes to outDir\n  if (!options.buildExport && prerenderManifest) {\n    await Promise.all(\n      Object.keys(prerenderManifest.routes).map(async (route) => {\n        const { srcRoute } = prerenderManifest!.routes[route]\n        const appPageName = mapAppRouteToPage.get(srcRoute || '')\n        const pageName = appPageName || srcRoute || route\n        const isAppPath = Boolean(appPageName)\n        const isAppRouteHandler = appPageName && isAppRouteRoute(appPageName)\n\n        // returning notFound: true from getStaticProps will not\n        // output html/json files during the build\n        if (prerenderManifest!.notFoundRoutes.includes(route)) {\n          return\n        }\n        route = normalizePagePath(route)\n\n        const pagePath = getPagePath(pageName, distDir, undefined, isAppPath)\n        const distPagesDir = join(\n          pagePath,\n          // strip leading / and then recurse number of nested dirs\n          // to place from base folder\n          pageName\n            .slice(1)\n            .split('/')\n            .map(() => '..')\n            .join('/')\n        )\n\n        const orig = join(distPagesDir, route)\n        const handlerSrc = `${orig}.body`\n        const handlerDest = join(outDir, route)\n\n        if (isAppRouteHandler && existsSync(handlerSrc)) {\n          await fs.mkdir(dirname(handlerDest), { recursive: true })\n          await fs.copyFile(handlerSrc, handlerDest)\n          return\n        }\n\n        const htmlDest = join(\n          outDir,\n          `${route}${\n            subFolders && route !== '/index' ? `${sep}index` : ''\n          }.html`\n        )\n        const ampHtmlDest = join(\n          outDir,\n          `${route}.amp${subFolders ? `${sep}index` : ''}.html`\n        )\n        const jsonDest = isAppPath\n          ? join(\n              outDir,\n              `${route}${\n                subFolders && route !== '/index' ? `${sep}index` : ''\n              }.txt`\n            )\n          : join(pagesDataDir, `${route}.json`)\n\n        await fs.mkdir(dirname(htmlDest), { recursive: true })\n        await fs.mkdir(dirname(jsonDest), { recursive: true })\n\n        const htmlSrc = `${orig}.html`\n        const jsonSrc = `${orig}${isAppPath ? RSC_SUFFIX : '.json'}`\n\n        await fs.copyFile(htmlSrc, htmlDest)\n        await fs.copyFile(jsonSrc, jsonDest)\n\n        if (existsSync(`${orig}.amp.html`)) {\n          await fs.mkdir(dirname(ampHtmlDest), { recursive: true })\n          await fs.copyFile(`${orig}.amp.html`, ampHtmlDest)\n        }\n      })\n    )\n  }\n\n  if (Object.keys(ampValidations).length) {\n    console.log(formatAmpMessages(ampValidations))\n  }\n  if (hadValidationError) {\n    throw new ExportError(\n      `AMP Validation caused the export to fail. https://nextjs.org/docs/messages/amp-export-validation`\n    )\n  }\n\n  if (renderError) {\n    throw new ExportError(\n      `Export encountered errors on following paths:\\n\\t${errorPaths\n        .sort()\n        .join('\\n\\t')}`\n    )\n  }\n\n  await fs.writeFile(\n    join(distDir, EXPORT_DETAIL),\n    formatManifest({\n      version: 1,\n      outDirectory: outDir,\n      success: true,\n    }),\n    'utf8'\n  )\n\n  if (telemetry) {\n    await telemetry.flush()\n  }\n\n  await endWorkerPromise\n\n  return collector\n}\n\nexport default async function exportApp(\n  dir: string,\n  options: ExportAppOptions,\n  span: Span\n): Promise<ExportAppResult | null> {\n  const nextExportSpan = span.traceChild('next-export')\n\n  return nextExportSpan.traceAsyncFn(async () => {\n    return await exportAppImpl(dir, options, nextExportSpan)\n  })\n}\n"],"names":["bold","yellow","findUp","existsSync","promises","fs","Worker","dirname","join","resolve","sep","formatAmpMessages","Log","RSC_SUFFIX","SSG_FALLBACK_EXPORT_ERROR","recursiveCopy","BUILD_ID_FILE","CLIENT_PUBLIC_FILES_PATH","CLIENT_STATIC_FILES_PATH","EXPORT_DETAIL","EXPORT_MARKER","NEXT_FONT_MANIFEST","MIDDLEWARE_MANIFEST","PAGES_MANIFEST","PHASE_EXPORT","PRERENDER_MANIFEST","SERVER_DIRECTORY","SERVER_REFERENCE_MANIFEST","APP_PATH_ROUTES_MANIFEST","loadConfig","eventCliSession","hasNextSupport","Telemetry","normalizePagePath","denormalizePagePath","loadEnvConfig","isAPIRoute","getPagePath","isAppRouteRoute","isAppPageRoute","isError","needsExperimentalReact","formatManifest","validateRevalidate","TurborepoAccessTraceResult","createProgress","checkIsAppPPREnabled","ExportError","Error","code","setupWorkers","options","nextConfig","exportPageWorker","pages","app","exportAppPageWorker","end","endWorker","Promise","threads","experimental","cpus","silent","buildExport","info","timeout","staticPageGenerationTimeout","infoPrinted","worker","require","onRestart","_method","path","attempts","warn","maxRetries","numWorkers","enableWorkerThreads","workerThreads","exposedMethods","default","exportAppImpl","dir","span","traceChild","traceFn","enabledDirectories","traceAsyncFn","distDir","telemetry","record","webpackVersion","cliCommand","isSrcDir","hasNowJson","cwd","isCustomServer","turboFlag","pagesDir","appDir","subFolders","trailingSlash","buildIdFile","customRoutes","filter","config","length","buildId","readFile","pagesManifest","prerenderManifest","appRoutePathManifest","err","undefined","excludedPrerenderRoutes","Set","Object","keys","defaultPathMap","hasApiRoutes","page","dynamicRoutes","add","mapAppRouteToPage","Map","pageName","routePath","entries","set","routes","_isAppDir","outDir","outdir","rm","recursive","force","mkdir","writeFile","version","outDirectory","success","exportPathMap","defaultMap","i18n","images","loader","unoptimized","isNextImageImported","then","text","JSON","parse","catch","serverActionsManifest","output","node","edge","renderOpts","previewProps","preview","nextExport","assetPrefix","replace","dev","basePath","canonicalBase","amp","ampSkipValidation","skipValidation","ampOptimizerConfig","optimizer","locales","locale","defaultLocale","domainLocales","domains","disableOptimizedLoading","supportsDynamicHTML","crossOrigin","optimizeCss","nextConfigOutput","nextScriptWorkers","optimizeFonts","largePageDataBytes","serverActions","serverComponents","nextFontManifest","strictNextHead","deploymentId","isAppPPREnabled","ppr","clientTraceMetadata","swrDelta","after","serverRuntimeConfig","publicRuntimeConfig","runtimeConfig","globalThis","__NEXT_DATA__","exportMap","exportPaths","map","filteredPaths","route","fallbackEnabledPages","prerenderInfo","fallback","size","hasMiddleware","middlewareManifest","middleware","progress","statusMessage","pagesDataDir","ampValidations","publicDir","workers","results","all","pathMap","exportPage","pageExportSpan","setAttribute","result","ampValidatorPath","validator","parentSpanId","getId","httpAgentOptions","debugOutput","cacheMaxMemorySize","fetchCache","fetchCacheKeyPrefix","cacheHandler","enableExperimentalReact","prerenderEarlyExit","errorPaths","renderError","hadValidationError","collector","byPath","byPage","ssgNotFoundPaths","turborepoAccessTraceResults","turborepoAccessTraceResult","fromSerialized","push","validation","errors","get","revalidate","metadata","hasEmptyPrelude","hasPostponed","ssgNotFound","durations","durationsByPath","duration","endWorkerPromise","srcRoute","appPageName","isAppPath","Boolean","isAppRouteHandler","notFoundRoutes","includes","pagePath","distPagesDir","slice","split","orig","handlerSrc","handlerDest","copyFile","htmlDest","ampHtmlDest","jsonDest","htmlSrc","jsonSrc","console","log","sort","flush","exportApp","nextExportSpan"],"rangeMappingsmappings":"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"}