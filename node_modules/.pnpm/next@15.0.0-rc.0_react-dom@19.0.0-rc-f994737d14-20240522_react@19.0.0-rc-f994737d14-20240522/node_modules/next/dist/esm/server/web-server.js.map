{"version":3,"sources":["../../src/server/web-server.ts"],"sourcesContent":["import type { WebNextRequest, WebNextResponse } from './base-http/web'\nimport type RenderResult from './render-result'\nimport type { NextParsedUrlQuery, NextUrlWithParsedQuery } from './request-meta'\nimport type { Params } from '../shared/lib/router/utils/route-matcher'\nimport type { LoadComponentsReturnType } from './load-components'\nimport type { PrerenderManifest } from '../build'\nimport type {\n  LoadedRenderOpts,\n  MiddlewareRoutingItem,\n  NormalizedRouteManifest,\n  Options,\n  RouteHandler,\n} from './base-server'\nimport type { Revalidate, SwrDelta } from './lib/revalidate'\n\nimport { byteLength } from './api-utils/web'\nimport BaseServer, { NoFallbackError } from './base-server'\nimport { generateETag } from './lib/etag'\nimport { addRequestMeta } from './request-meta'\nimport WebResponseCache from './response-cache/web'\nimport { isAPIRoute } from '../lib/is-api-route'\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { isDynamicRoute } from '../shared/lib/router/utils'\nimport {\n  interpolateDynamicPath,\n  normalizeVercelUrl,\n  normalizeDynamicRouteParams,\n} from './server-utils'\nimport { getNamedRouteRegex } from '../shared/lib/router/utils/route-regex'\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher'\nimport { IncrementalCache } from './lib/incremental-cache'\nimport type { PAGE_TYPES } from '../lib/page-types'\nimport type { Rewrite } from '../lib/load-custom-routes'\nimport { buildCustomRoute } from '../lib/build-custom-route'\nimport { UNDERSCORE_NOT_FOUND_ROUTE } from '../api/constants'\nimport type { DeepReadonly } from '../shared/lib/deep-readonly'\n\ninterface WebServerOptions extends Options {\n  webServerConfig: {\n    page: string\n    pathname: string\n    pagesType: PAGE_TYPES\n    loadComponent: (page: string) => Promise<LoadComponentsReturnType | null>\n    extendRenderOpts: Partial<BaseServer['renderOpts']> &\n      Pick<BaseServer['renderOpts'], 'buildId'> & {\n        serverActionsManifest?: any\n      }\n    renderToHTML:\n      | typeof import('./app-render/app-render').renderToHTMLOrFlight\n      | undefined\n    incrementalCacheHandler?: any\n    prerenderManifest: DeepReadonly<PrerenderManifest> | undefined\n    interceptionRouteRewrites?: Rewrite[]\n  }\n}\n\ntype WebRouteHandler = RouteHandler<WebNextRequest, WebNextResponse>\n\nexport default class NextWebServer extends BaseServer<\n  WebServerOptions,\n  WebNextRequest,\n  WebNextResponse\n> {\n  constructor(options: WebServerOptions) {\n    super(options)\n\n    // Extend `renderOpts`.\n    Object.assign(this.renderOpts, options.webServerConfig.extendRenderOpts)\n  }\n\n  protected async getIncrementalCache({\n    requestHeaders,\n  }: {\n    requestHeaders: IncrementalCache['requestHeaders']\n  }) {\n    const dev = !!this.renderOpts.dev\n    // incremental-cache is request specific\n    // although can have shared caches in module scope\n    // per-cache handler\n    return new IncrementalCache({\n      dev,\n      requestHeaders,\n      requestProtocol: 'https',\n      pagesDir: this.enabledDirectories.pages,\n      appDir: this.enabledDirectories.app,\n      allowedRevalidateHeaderKeys:\n        this.nextConfig.experimental.allowedRevalidateHeaderKeys,\n      minimalMode: this.minimalMode,\n      fetchCache: true,\n      fetchCacheKeyPrefix: this.nextConfig.experimental.fetchCacheKeyPrefix,\n      maxMemoryCacheSize: this.nextConfig.cacheMaxMemorySize,\n      flushToDisk: false,\n      CurCacheHandler:\n        this.serverOptions.webServerConfig.incrementalCacheHandler,\n      getPrerenderManifest: () => this.getPrerenderManifest(),\n      // PPR is not supported in the Edge runtime.\n      isAppPPREnabled: false,\n    })\n  }\n  protected getResponseCache() {\n    return new WebResponseCache(this.minimalMode)\n  }\n\n  protected async hasPage(page: string) {\n    return page === this.serverOptions.webServerConfig.page\n  }\n\n  protected getBuildId() {\n    return this.serverOptions.webServerConfig.extendRenderOpts.buildId\n  }\n\n  protected getEnabledDirectories() {\n    return {\n      app: this.serverOptions.webServerConfig.pagesType === 'app',\n      pages: this.serverOptions.webServerConfig.pagesType === 'pages',\n    }\n  }\n\n  protected getPagesManifest() {\n    return {\n      // keep same theme but server path doesn't need to be accurate\n      [this.serverOptions.webServerConfig.pathname]:\n        `server${this.serverOptions.webServerConfig.page}.js`,\n    }\n  }\n\n  protected getAppPathsManifest() {\n    const page = this.serverOptions.webServerConfig.page\n    return {\n      [this.serverOptions.webServerConfig.page]: `app${page}.js`,\n    }\n  }\n\n  protected attachRequestMeta(\n    req: WebNextRequest,\n    parsedUrl: NextUrlWithParsedQuery\n  ) {\n    addRequestMeta(req, 'initQuery', { ...parsedUrl.query })\n  }\n\n  protected getPrerenderManifest() {\n    const { prerenderManifest } = this.serverOptions.webServerConfig\n    if (this.renderOpts?.dev || !prerenderManifest) {\n      return {\n        version: -1 as any, // letting us know this doesn't conform to spec\n        routes: {},\n        dynamicRoutes: {},\n        notFoundRoutes: [],\n        preview: {\n          previewModeId: 'development-id',\n        } as any, // `preview` is special case read in next-dev-server\n      }\n    }\n    return prerenderManifest\n  }\n\n  protected getNextFontManifest() {\n    return this.serverOptions.webServerConfig.extendRenderOpts.nextFontManifest\n  }\n\n  protected handleCatchallRenderRequest: WebRouteHandler = async (\n    req,\n    res,\n    parsedUrl\n  ) => {\n    let { pathname, query } = parsedUrl\n    if (!pathname) {\n      throw new Error('pathname is undefined')\n    }\n\n    // interpolate query information into page for dynamic route\n    // so that rewritten paths are handled properly\n    const normalizedPage = this.serverOptions.webServerConfig.pathname\n\n    if (pathname !== normalizedPage) {\n      pathname = normalizedPage\n\n      if (isDynamicRoute(pathname)) {\n        const routeRegex = getNamedRouteRegex(pathname, false)\n        const dynamicRouteMatcher = getRouteMatcher(routeRegex)\n        const defaultRouteMatches = dynamicRouteMatcher(\n          pathname\n        ) as NextParsedUrlQuery\n        const paramsResult = normalizeDynamicRouteParams(\n          query,\n          false,\n          routeRegex,\n          defaultRouteMatches\n        )\n        const normalizedParams = paramsResult.hasValidParams\n          ? paramsResult.params\n          : query\n\n        pathname = interpolateDynamicPath(\n          pathname,\n          normalizedParams,\n          routeRegex\n        )\n        normalizeVercelUrl(\n          req,\n          true,\n          Object.keys(routeRegex.routeKeys),\n          true,\n          routeRegex\n        )\n      }\n    }\n\n    // next.js core assumes page path without trailing slash\n    pathname = removeTrailingSlash(pathname)\n\n    if (this.i18nProvider) {\n      const { detectedLocale } = await this.i18nProvider.analyze(pathname)\n      if (detectedLocale) {\n        parsedUrl.query.__nextLocale = detectedLocale\n      }\n    }\n\n    const bubbleNoFallback = !!query._nextBubbleNoFallback\n\n    if (isAPIRoute(pathname)) {\n      delete query._nextBubbleNoFallback\n    }\n\n    try {\n      await this.render(req, res, pathname, query, parsedUrl, true)\n\n      return true\n    } catch (err) {\n      if (err instanceof NoFallbackError && bubbleNoFallback) {\n        return false\n      }\n      throw err\n    }\n  }\n\n  protected renderHTML(\n    req: WebNextRequest,\n    res: WebNextResponse,\n    pathname: string,\n    query: NextParsedUrlQuery,\n    renderOpts: LoadedRenderOpts\n  ): Promise<RenderResult> {\n    const { renderToHTML } = this.serverOptions.webServerConfig\n    if (!renderToHTML) {\n      throw new Error(\n        'Invariant: routeModule should be configured when rendering pages'\n      )\n    }\n\n    // For edge runtime if the pathname hit as /_not-found entrypoint,\n    // override the pathname to /404 for rendering\n    if (pathname === UNDERSCORE_NOT_FOUND_ROUTE) {\n      pathname = '/404'\n    }\n    return renderToHTML(\n      req as any,\n      res as any,\n      pathname,\n      query,\n      Object.assign(renderOpts, {\n        disableOptimizedLoading: true,\n        runtime: 'experimental-edge',\n      })\n    )\n  }\n\n  protected async sendRenderResult(\n    _req: WebNextRequest,\n    res: WebNextResponse,\n    options: {\n      result: RenderResult\n      type: 'html' | 'json'\n      generateEtags: boolean\n      poweredByHeader: boolean\n      revalidate: Revalidate | undefined\n      swrDelta: SwrDelta | undefined\n    }\n  ): Promise<void> {\n    res.setHeader('X-Edge-Runtime', '1')\n\n    // Add necessary headers.\n    // @TODO: Share the isomorphic logic with server/send-payload.ts.\n    if (options.poweredByHeader && options.type === 'html') {\n      res.setHeader('X-Powered-By', 'Next.js')\n    }\n\n    if (!res.getHeader('Content-Type')) {\n      res.setHeader(\n        'Content-Type',\n        options.result.contentType\n          ? options.result.contentType\n          : options.type === 'json'\n            ? 'application/json'\n            : 'text/html; charset=utf-8'\n      )\n    }\n\n    let promise: Promise<void> | undefined\n    if (options.result.isDynamic) {\n      promise = options.result.pipeTo(res.transformStream.writable)\n    } else {\n      const payload = options.result.toUnchunkedString()\n      res.setHeader('Content-Length', String(byteLength(payload)))\n      if (options.generateEtags) {\n        res.setHeader('ETag', generateETag(payload))\n      }\n      res.body(payload)\n    }\n\n    res.send()\n\n    // If we have a promise, wait for it to resolve.\n    if (promise) await promise\n  }\n\n  protected async findPageComponents({\n    page,\n    query,\n    params,\n    url: _url,\n  }: {\n    page: string\n    query: NextParsedUrlQuery\n    params: Params | null\n    isAppPath: boolean\n    url?: string\n  }) {\n    const result = await this.serverOptions.webServerConfig.loadComponent(page)\n    if (!result) return null\n\n    return {\n      query: {\n        ...(query || {}),\n        ...(params || {}),\n      },\n      components: result,\n    }\n  }\n\n  // Below are methods that are not implemented by the web server as they are\n  // handled by the upstream proxy (edge runtime or node server).\n\n  protected async runApi() {\n    // This web server does not need to handle API requests.\n    return true\n  }\n\n  protected async handleApiRequest() {\n    // Edge API requests are handled separately in minimal mode.\n    return false\n  }\n\n  protected loadEnvConfig() {\n    // The web server does not need to load the env config. This is done by the\n    // runtime already.\n  }\n\n  protected getPublicDir() {\n    // Public files are not handled by the web server.\n    return ''\n  }\n\n  protected getHasStaticDir() {\n    return false\n  }\n\n  protected async getFallback() {\n    return ''\n  }\n\n  protected getFontManifest() {\n    return undefined\n  }\n\n  protected handleCompression() {\n    // For the web server layer, compression is automatically handled by the\n    // upstream proxy (edge runtime or node server) and we can simply skip here.\n  }\n\n  protected async handleUpgrade(): Promise<void> {\n    // The web server does not support web sockets.\n  }\n\n  protected async getFallbackErrorComponents(\n    _url?: string\n  ): Promise<LoadComponentsReturnType | null> {\n    // The web server does not need to handle fallback errors in production.\n    return null\n  }\n  protected getRoutesManifest(): NormalizedRouteManifest | undefined {\n    // The web server does not need to handle rewrite rules. This is done by the\n    // upstream proxy (edge runtime or node server).\n    return undefined\n  }\n\n  protected getMiddleware(): MiddlewareRoutingItem | undefined {\n    // The web server does not need to handle middleware. This is done by the\n    // upstream proxy (edge runtime or node server).\n    return undefined\n  }\n\n  protected getFilesystemPaths() {\n    return new Set<string>()\n  }\n\n  protected async getPrefetchRsc(): Promise<string | null> {\n    return null\n  }\n\n  protected getinterceptionRoutePatterns(): RegExp[] {\n    return (\n      this.serverOptions.webServerConfig.interceptionRouteRewrites?.map(\n        (rewrite) => new RegExp(buildCustomRoute('rewrite', rewrite).regex)\n      ) ?? []\n    )\n  }\n}\n"],"names":["byteLength","BaseServer","NoFallbackError","generateETag","addRequestMeta","WebResponseCache","isAPIRoute","removeTrailingSlash","isDynamicRoute","interpolateDynamicPath","normalizeVercelUrl","normalizeDynamicRouteParams","getNamedRouteRegex","getRouteMatcher","IncrementalCache","buildCustomRoute","UNDERSCORE_NOT_FOUND_ROUTE","NextWebServer","constructor","options","handleCatchallRenderRequest","req","res","parsedUrl","pathname","query","Error","normalizedPage","serverOptions","webServerConfig","routeRegex","dynamicRouteMatcher","defaultRouteMatches","paramsResult","normalizedParams","hasValidParams","params","Object","keys","routeKeys","i18nProvider","detectedLocale","analyze","__nextLocale","bubbleNoFallback","_nextBubbleNoFallback","render","err","assign","renderOpts","extendRenderOpts","getIncrementalCache","requestHeaders","dev","requestProtocol","pagesDir","enabledDirectories","pages","appDir","app","allowedRevalidateHeaderKeys","nextConfig","experimental","minimalMode","fetchCache","fetchCacheKeyPrefix","maxMemoryCacheSize","cacheMaxMemorySize","flushToDisk","CurCacheHandler","incrementalCacheHandler","getPrerenderManifest","isAppPPREnabled","getResponseCache","hasPage","page","getBuildId","buildId","getEnabledDirectories","pagesType","getPagesManifest","getAppPathsManifest","attachRequestMeta","prerenderManifest","version","routes","dynamicRoutes","notFoundRoutes","preview","previewModeId","getNextFontManifest","nextFontManifest","renderHTML","renderToHTML","disableOptimizedLoading","runtime","sendRenderResult","_req","setHeader","poweredByHeader","type","getHeader","result","contentType","promise","isDynamic","pipeTo","transformStream","writable","payload","toUnchunkedString","String","generateEtags","body","send","findPageComponents","url","_url","loadComponent","components","runApi","handleApiRequest","loadEnvConfig","getPublicDir","getHasStaticDir","getFallback","getFontManifest","undefined","handleCompression","handleUpgrade","getFallbackErrorComponents","getRoutesManifest","getMiddleware","getFilesystemPaths","Set","getPrefetchRsc","getinterceptionRoutePatterns","interceptionRouteRewrites","map","rewrite","RegExp","regex"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}