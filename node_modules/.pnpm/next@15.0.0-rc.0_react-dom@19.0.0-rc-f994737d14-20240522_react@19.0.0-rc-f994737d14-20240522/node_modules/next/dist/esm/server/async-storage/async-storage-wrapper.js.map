{"version":3,"sources":["../../../src/server/async-storage/async-storage-wrapper.ts"],"sourcesContent":["import type { AsyncLocalStorage } from 'async_hooks'\n\n/**\n * Implementations provide a wrapping function that will provide the storage to\n * async calls derived from the provided callback function.\n */\nexport interface AsyncStorageWrapper<Store extends {}, Context extends {}> {\n  /**\n   * Wraps the callback with the underlying storage.\n   *\n   * @param storage underlying storage object\n   * @param context context used to create the storage object\n   * @param callback function to call within the scope of the storage\n   * @returns the result of the callback\n   */\n  wrap<Result>(\n    storage: AsyncLocalStorage<Store>,\n    context: Context,\n    callback: (store: Store) => Result\n  ): Result\n}\n"],"names":[],"rangeMappings":";;;","mappings":"AAEA;;;CAGC,GACD,WAcC"}