{"version":3,"sources":["../../../src/server/lib/start-server.ts"],"sourcesContent":["if (performance.getEntriesByName('next-start').length === 0) {\n  performance.mark('next-start')\n}\nimport '../next'\nimport '../require-hook'\n\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { SelfSignedCertificate } from '../../lib/mkcert'\nimport type { WorkerRequestHandler, WorkerUpgradeHandler } from './types'\n\nimport fs from 'fs'\nimport v8 from 'v8'\nimport path from 'path'\nimport http from 'http'\nimport https from 'https'\nimport os from 'os'\nimport Watchpack from 'next/dist/compiled/watchpack'\nimport * as Log from '../../build/output/log'\nimport setupDebug from 'next/dist/compiled/debug'\nimport {\n  RESTART_EXIT_CODE,\n  getFormattedDebugAddress,\n  getNodeDebugType,\n} from './utils'\nimport { formatHostname } from './format-hostname'\nimport { initialize } from './router-server'\nimport { CONFIG_FILES } from '../../shared/lib/constants'\nimport { getStartServerInfo, logStartInfo } from './app-info-log'\nimport { validateTurboNextConfig } from '../../lib/turbopack-warning'\nimport { type Span, trace, flushAllTraces } from '../../trace'\nimport { isPostpone } from './router-utils/is-postpone'\n\nconst debug = setupDebug('next:start-server')\nlet startServerSpan: Span | undefined\n\nexport interface StartServerOptions {\n  dir: string\n  port: number\n  isDev: boolean\n  hostname?: string\n  allowRetry?: boolean\n  customServer?: boolean\n  minimalMode?: boolean\n  keepAliveTimeout?: number\n  // this is dev-server only\n  selfSignedCertificate?: SelfSignedCertificate\n}\n\nexport async function getRequestHandlers({\n  dir,\n  port,\n  isDev,\n  server,\n  hostname,\n  minimalMode,\n  isNodeDebugging,\n  keepAliveTimeout,\n  experimentalHttpsServer,\n  quiet,\n}: {\n  dir: string\n  port: number\n  isDev: boolean\n  server?: import('http').Server\n  hostname?: string\n  minimalMode?: boolean\n  isNodeDebugging?: boolean\n  keepAliveTimeout?: number\n  experimentalHttpsServer?: boolean\n  quiet?: boolean\n}): ReturnType<typeof initialize> {\n  return initialize({\n    dir,\n    port,\n    hostname,\n    dev: isDev,\n    minimalMode,\n    server,\n    isNodeDebugging: isNodeDebugging || false,\n    keepAliveTimeout,\n    experimentalHttpsServer,\n    startServerSpan,\n    quiet,\n  })\n}\n\nexport async function startServer(\n  serverOptions: StartServerOptions\n): Promise<void> {\n  const {\n    dir,\n    isDev,\n    hostname,\n    minimalMode,\n    allowRetry,\n    keepAliveTimeout,\n    selfSignedCertificate,\n  } = serverOptions\n  let { port } = serverOptions\n\n  process.title = `next-server (v${process.env.__NEXT_VERSION})`\n  let handlersReady = () => {}\n  let handlersError = () => {}\n\n  let handlersPromise: Promise<void> | undefined = new Promise<void>(\n    (resolve, reject) => {\n      handlersReady = resolve\n      handlersError = reject\n    }\n  )\n  let requestHandler: WorkerRequestHandler = async (\n    req: IncomingMessage,\n    res: ServerResponse\n  ): Promise<void> => {\n    if (handlersPromise) {\n      await handlersPromise\n      return requestHandler(req, res)\n    }\n    throw new Error('Invariant request handler was not setup')\n  }\n  let upgradeHandler: WorkerUpgradeHandler = async (\n    req,\n    socket,\n    head\n  ): Promise<void> => {\n    if (handlersPromise) {\n      await handlersPromise\n      return upgradeHandler(req, socket, head)\n    }\n    throw new Error('Invariant upgrade handler was not setup')\n  }\n\n  // setup server listener as fast as possible\n  if (selfSignedCertificate && !isDev) {\n    throw new Error(\n      'Using a self signed certificate is only supported with `next dev`.'\n    )\n  }\n\n  async function requestListener(req: IncomingMessage, res: ServerResponse) {\n    try {\n      if (handlersPromise) {\n        await handlersPromise\n        handlersPromise = undefined\n      }\n      await requestHandler(req, res)\n    } catch (err) {\n      res.statusCode = 500\n      res.end('Internal Server Error')\n      Log.error(`Failed to handle request for ${req.url}`)\n      console.error(err)\n    } finally {\n      if (isDev) {\n        if (\n          v8.getHeapStatistics().used_heap_size >\n          0.8 * v8.getHeapStatistics().heap_size_limit\n        ) {\n          Log.warn(\n            `Server is approaching the used memory threshold, restarting...`\n          )\n          trace('server-restart-close-to-memory-threshold', undefined, {\n            'memory.heapSizeLimit': String(\n              v8.getHeapStatistics().heap_size_limit\n            ),\n            'memory.heapUsed': String(v8.getHeapStatistics().used_heap_size),\n          }).stop()\n          await flushAllTraces()\n          process.exit(RESTART_EXIT_CODE)\n        }\n      }\n    }\n  }\n\n  const server = selfSignedCertificate\n    ? https.createServer(\n        {\n          key: fs.readFileSync(selfSignedCertificate.key),\n          cert: fs.readFileSync(selfSignedCertificate.cert),\n        },\n        requestListener\n      )\n    : http.createServer(requestListener)\n\n  if (keepAliveTimeout) {\n    server.keepAliveTimeout = keepAliveTimeout\n  }\n  server.on('upgrade', async (req, socket, head) => {\n    try {\n      await upgradeHandler(req, socket, head)\n    } catch (err) {\n      socket.destroy()\n      Log.error(`Failed to handle request for ${req.url}`)\n      console.error(err)\n    }\n  })\n\n  let portRetryCount = 0\n\n  server.on('error', (err: NodeJS.ErrnoException) => {\n    if (\n      allowRetry &&\n      port &&\n      isDev &&\n      err.code === 'EADDRINUSE' &&\n      portRetryCount < 10\n    ) {\n      Log.warn(`Port ${port} is in use, trying ${port + 1} instead.`)\n      port += 1\n      portRetryCount += 1\n      server.listen(port, hostname)\n    } else {\n      Log.error(`Failed to start server`)\n      console.error(err)\n      process.exit(1)\n    }\n  })\n\n  await new Promise<void>((resolve) => {\n    server.on('listening', async () => {\n      const nodeDebugType = getNodeDebugType()\n\n      const addr = server.address()\n      const actualHostname = formatHostname(\n        typeof addr === 'object'\n          ? addr?.address || hostname || 'localhost'\n          : addr\n      )\n      const formattedHostname =\n        !hostname || actualHostname === '0.0.0.0'\n          ? 'localhost'\n          : actualHostname === '[::]'\n            ? '[::1]'\n            : formatHostname(hostname)\n\n      port = typeof addr === 'object' ? addr?.port || port : port\n\n      const networkUrl = hostname ? `http://${actualHostname}:${port}` : null\n      const appUrl = `${\n        selfSignedCertificate ? 'https' : 'http'\n      }://${formattedHostname}:${port}`\n\n      if (nodeDebugType) {\n        const formattedDebugAddress = getFormattedDebugAddress()\n        Log.info(\n          `the --${nodeDebugType} option was detected, the Next.js router server should be inspected at ${formattedDebugAddress}.`\n        )\n      }\n\n      // expose the main port to render workers\n      process.env.PORT = port + ''\n      process.env.__NEXT_PRIVATE_ORIGIN = appUrl\n\n      // Only load env and config in dev to for logging purposes\n      let envInfo: string[] | undefined\n      let expFeatureInfo: string[] | undefined\n      if (isDev) {\n        const startServerInfo = await getStartServerInfo(dir, isDev)\n        envInfo = startServerInfo.envInfo\n        expFeatureInfo = startServerInfo.expFeatureInfo\n      }\n      logStartInfo({\n        networkUrl,\n        appUrl,\n        envInfo,\n        expFeatureInfo,\n        maxExperimentalFeatures: 3,\n      })\n\n      Log.event(`Starting...`)\n\n      try {\n        const cleanup = () => {\n          debug('start-server process cleanup')\n          server.close(() => process.exit(0))\n        }\n        const exception = (err: Error) => {\n          if (isPostpone(err)) {\n            // React postpones that are unhandled might end up logged here but they're\n            // not really errors. They're just part of rendering.\n            return\n          }\n\n          // This is the render worker, we keep the process alive\n          console.error(err)\n        }\n        // Make sure commands gracefully respect termination signals (e.g. from Docker)\n        // Allow the graceful termination to be manually configurable\n        if (!process.env.NEXT_MANUAL_SIG_HANDLE) {\n          process.on('SIGINT', cleanup)\n          process.on('SIGTERM', cleanup)\n        }\n        process.on('rejectionHandled', () => {\n          // It is ok to await a Promise late in Next.js as it allows for better\n          // prefetching patterns to avoid waterfalls. We ignore loggining these.\n          // We should've already errored in anyway unhandledRejection.\n        })\n        process.on('uncaughtException', exception)\n        process.on('unhandledRejection', exception)\n\n        const initResult = await getRequestHandlers({\n          dir,\n          port,\n          isDev,\n          server,\n          hostname,\n          minimalMode,\n          isNodeDebugging: Boolean(nodeDebugType),\n          keepAliveTimeout,\n          experimentalHttpsServer: !!selfSignedCertificate,\n        })\n        requestHandler = initResult[0]\n        upgradeHandler = initResult[1]\n\n        const startServerProcessDuration =\n          performance.mark('next-start-end') &&\n          performance.measure(\n            'next-start-duration',\n            'next-start',\n            'next-start-end'\n          ).duration\n\n        handlersReady()\n        const formatDurationText =\n          startServerProcessDuration > 2000\n            ? `${Math.round(startServerProcessDuration / 100) / 10}s`\n            : `${Math.round(startServerProcessDuration)}ms`\n\n        Log.event(`Ready in ${formatDurationText}`)\n\n        if (process.env.TURBOPACK) {\n          await validateTurboNextConfig({\n            dir: serverOptions.dir,\n            isDev: true,\n          })\n        }\n      } catch (err) {\n        // fatal error if we can't setup\n        handlersError()\n        console.error(err)\n        process.exit(1)\n      }\n\n      resolve()\n    })\n    server.listen(port, hostname)\n  })\n\n  if (isDev) {\n    function watchConfigFiles(\n      dirToWatch: string,\n      onChange: (filename: string) => void\n    ) {\n      const wp = new Watchpack()\n      wp.watch({\n        files: CONFIG_FILES.map((file) => path.join(dirToWatch, file)),\n      })\n      wp.on('change', onChange)\n    }\n    watchConfigFiles(dir, async (filename) => {\n      if (process.env.__NEXT_DISABLE_MEMORY_WATCHER) {\n        Log.info(\n          `Detected change, manual restart required due to '__NEXT_DISABLE_MEMORY_WATCHER' usage`\n        )\n        return\n      }\n\n      Log.warn(\n        `Found a change in ${path.basename(\n          filename\n        )}. Restarting the server to apply the changes...`\n      )\n      process.exit(RESTART_EXIT_CODE)\n    })\n  }\n}\n\nif (process.env.NEXT_PRIVATE_WORKER && process.send) {\n  process.addListener('message', async (msg: any) => {\n    if (msg && typeof msg && msg.nextWorkerOptions && process.send) {\n      startServerSpan = trace('start-dev-server', undefined, {\n        cpus: String(os.cpus().length),\n        platform: os.platform(),\n        'memory.freeMem': String(os.freemem()),\n        'memory.totalMem': String(os.totalmem()),\n        'memory.heapSizeLimit': String(v8.getHeapStatistics().heap_size_limit),\n      })\n      await startServerSpan.traceAsyncFn(() =>\n        startServer(msg.nextWorkerOptions)\n      )\n      const memoryUsage = process.memoryUsage()\n      startServerSpan.setAttribute('memory.rss', String(memoryUsage.rss))\n      startServerSpan.setAttribute(\n        'memory.heapTotal',\n        String(memoryUsage.heapTotal)\n      )\n      startServerSpan.setAttribute(\n        'memory.heapUsed',\n        String(memoryUsage.heapUsed)\n      )\n      process.send({ nextServerReady: true })\n    }\n  })\n  process.send({ nextWorkerReady: true })\n}\n"],"names":["performance","getEntriesByName","length","mark","fs","v8","path","http","https","os","Watchpack","Log","setupDebug","RESTART_EXIT_CODE","getFormattedDebugAddress","getNodeDebugType","formatHostname","initialize","CONFIG_FILES","getStartServerInfo","logStartInfo","validateTurboNextConfig","trace","flushAllTraces","isPostpone","debug","startServerSpan","getRequestHandlers","dir","port","isDev","server","hostname","minimalMode","isNodeDebugging","keepAliveTimeout","experimentalHttpsServer","quiet","dev","startServer","serverOptions","allowRetry","selfSignedCertificate","process","title","env","__NEXT_VERSION","handlersReady","handlersError","handlersPromise","Promise","resolve","reject","requestHandler","req","res","Error","upgradeHandler","socket","head","requestListener","undefined","err","statusCode","end","error","url","console","getHeapStatistics","used_heap_size","heap_size_limit","warn","String","stop","exit","createServer","key","readFileSync","cert","on","destroy","portRetryCount","code","listen","nodeDebugType","addr","address","actualHostname","formattedHostname","networkUrl","appUrl","formattedDebugAddress","info","PORT","__NEXT_PRIVATE_ORIGIN","envInfo","expFeatureInfo","startServerInfo","maxExperimentalFeatures","event","cleanup","close","exception","NEXT_MANUAL_SIG_HANDLE","initResult","Boolean","startServerProcessDuration","measure","duration","formatDurationText","Math","round","TURBOPACK","watchConfigFiles","dirToWatch","onChange","wp","watch","files","map","file","join","filename","__NEXT_DISABLE_MEMORY_WATCHER","basename","NEXT_PRIVATE_WORKER","send","addListener","msg","nextWorkerOptions","cpus","platform","freemem","totalmem","traceAsyncFn","memoryUsage","setAttribute","rss","heapTotal","heapUsed","nextServerReady","nextWorkerReady"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}