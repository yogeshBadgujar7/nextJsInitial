{"version":3,"sources":["../../../../../src/build/webpack/loaders/next-flight-loader/index.ts"],"sourcesContent":["import type { webpack } from 'next/dist/compiled/webpack/webpack'\nimport { RSC_MOD_REF_PROXY_ALIAS } from '../../../../lib/constants'\nimport {\n  BARREL_OPTIMIZATION_PREFIX,\n  RSC_MODULE_TYPES,\n} from '../../../../shared/lib/constants'\nimport { warnOnce } from '../../../../shared/lib/utils/warn-once'\nimport { getRSCModuleInformation } from '../../../analysis/get-page-static-info'\nimport { formatBarrelOptimizedResource } from '../../utils'\nimport { getModuleBuildInfo } from '../get-module-build-info'\n\nconst noopHeadPath = require.resolve('next/dist/client/components/noop-head')\n// For edge runtime it will be aliased to esm version by webpack\nconst MODULE_PROXY_PATH =\n  'next/dist/build/webpack/loaders/next-flight-loader/module-proxy'\n\ntype SourceType = 'auto' | 'commonjs' | 'module'\nexport function getAssumedSourceType(\n  mod: webpack.Module,\n  sourceType: SourceType\n): SourceType {\n  const buildInfo = getModuleBuildInfo(mod)\n  const detectedClientEntryType = buildInfo?.rsc?.clientEntryType\n  const clientRefs = buildInfo?.rsc?.clientRefs || []\n\n  // It's tricky to detect the type of a client boundary, but we should always\n  // use the `module` type when we can, to support `export *` and `export from`\n  // syntax in other modules that import this client boundary.\n  let assumedSourceType = sourceType\n  if (assumedSourceType === 'auto' && detectedClientEntryType === 'auto') {\n    if (\n      clientRefs.length === 0 ||\n      (clientRefs.length === 1 && clientRefs[0] === '')\n    ) {\n      // If there's zero export detected in the client boundary, and it's the\n      // `auto` type, we can safely assume it's a CJS module because it doesn't\n      // have ESM exports.\n      assumedSourceType = 'commonjs'\n    } else if (!clientRefs.includes('*')) {\n      // Otherwise, we assume it's an ESM module.\n      assumedSourceType = 'module'\n    }\n  }\n  return assumedSourceType\n}\n\nexport default function transformSource(\n  this: any,\n  source: string,\n  sourceMap: any\n) {\n  // Avoid buffer to be consumed\n  if (typeof source !== 'string') {\n    throw new Error('Expected source to have been transformed to a string.')\n  }\n\n  // Assign the RSC meta information to buildInfo.\n  // Exclude next internal files which are not marked as client files\n  const buildInfo = getModuleBuildInfo(this._module)\n  buildInfo.rsc = getRSCModuleInformation(source, true)\n\n  // Resource key is the unique identifier for the resource. When RSC renders\n  // a client module, that key is used to identify that module across all compiler\n  // layers.\n  //\n  // Usually it's the module's file path + the export name (e.g. `foo.js#bar`).\n  // But with Barrel Optimizations, one file can be splitted into multiple modules,\n  // so when you import `foo.js#bar` and `foo.js#baz`, they are actually different\n  // \"foo.js\" being created by the Barrel Loader (one only exports `bar`, the other\n  // only exports `baz`).\n  //\n  // Because of that, we must add another query param to the resource key to\n  // differentiate them.\n  let resourceKey: string = this.resourcePath\n  if (this._module?.matchResource?.startsWith(BARREL_OPTIMIZATION_PREFIX)) {\n    resourceKey = formatBarrelOptimizedResource(\n      resourceKey,\n      this._module.matchResource\n    )\n  }\n\n  // A client boundary.\n  if (buildInfo.rsc?.type === RSC_MODULE_TYPES.client) {\n    const assumedSourceType = getAssumedSourceType(\n      this._module,\n      this._module?.parser?.sourceType\n    )\n    const clientRefs = buildInfo.rsc.clientRefs!\n\n    if (assumedSourceType === 'module') {\n      if (clientRefs.includes('*')) {\n        this.callback(\n          new Error(\n            `It's currently unsupported to use \"export *\" in a client boundary. Please use named exports instead.`\n          )\n        )\n        return\n      }\n\n      let esmSource = `\\\nimport { createProxy } from \"${MODULE_PROXY_PATH}\"\n`\n      let cnt = 0\n      for (const ref of clientRefs) {\n        if (ref === '') {\n          esmSource += `\\nexports[''] = createProxy(String.raw\\`${resourceKey}#\\`);`\n        } else if (ref === 'default') {\n          esmSource += `\\\nexport default createProxy(String.raw\\`${resourceKey}#default\\`);\n`\n        } else {\n          esmSource += `\nconst e${cnt} = createProxy(String.raw\\`${resourceKey}#${ref}\\`);\nexport { e${cnt++} as ${ref} };`\n        }\n      }\n\n      this.callback(null, esmSource, sourceMap)\n      return\n    }\n  }\n\n  if (buildInfo.rsc?.type !== RSC_MODULE_TYPES.client) {\n    if (noopHeadPath === this.resourcePath) {\n      warnOnce(\n        `Warning: You're using \\`next/head\\` inside the \\`app\\` directory, please migrate to the Metadata API. See https://nextjs.org/docs/app/building-your-application/upgrading/app-router-migration#step-3-migrating-nexthead for more details.`\n      )\n    }\n  }\n\n  const replacedSource = source.replace(\n    RSC_MOD_REF_PROXY_ALIAS,\n    MODULE_PROXY_PATH\n  )\n  this.callback(null, replacedSource, sourceMap)\n}\n"],"names":["RSC_MOD_REF_PROXY_ALIAS","BARREL_OPTIMIZATION_PREFIX","RSC_MODULE_TYPES","warnOnce","getRSCModuleInformation","formatBarrelOptimizedResource","getModuleBuildInfo","noopHeadPath","require","resolve","MODULE_PROXY_PATH","getAssumedSourceType","mod","sourceType","buildInfo","detectedClientEntryType","rsc","clientEntryType","clientRefs","assumedSourceType","length","includes","transformSource","source","sourceMap","Error","_module","resourceKey","resourcePath","matchResource","startsWith","type","client","parser","callback","esmSource","cnt","ref","replacedSource","replace"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}